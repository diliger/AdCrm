//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Acts_Contracts", "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Contract), "Acts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Act), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Acts_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Acts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Act), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Acts_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Acts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Act), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactPersons_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ContactPersons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactPerson), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactPersons_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ContactPersons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactPerson), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contacts_ContactPersons", "ContactPersons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContactPerson), "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contact), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contacts_ContactTypes", "ContactTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContactType), "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contact), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactTypes_ContactTypes", "ContactTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ContactType), "ContactTypes1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_ContractRoles", "ContractRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContractRole), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_Contracts", "Contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contract), "ProjectWorks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_PaymentRoles", "PaymentRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.PaymentRole), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_ProjectWorks", "ProjectWorks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectWork), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorkStages_Projects", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectStages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectStage), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectWorks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectWorks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_WorkTypes", "WorkTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.WorkType), "ProjectWorks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Users_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.User), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Users_Users_ChangerID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.User), "Users1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.User), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Users_Users_CreatorID", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.User), "Users1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.User), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_UserSettings_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "UserSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.UserSetting), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_DaysFromTypes", "DaysFromType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.DaysFromType), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Contracts", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contract), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_DaysFromTypes", "DaysFromType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.DaysFromType), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_DaysFromTypes", "DaysFromType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.DaysFromType), "ProjectWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Departments_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Department), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Departments_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Department), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Departments_Users_ManagerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Department), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Departments", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Department), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Positions_Departments", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Department), "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Position), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Positions", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Position), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_ExpenseTypes", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ExpenseType), "Expens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Expens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Expens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePeriods_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpensePeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePeriod), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePeriods_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpensePeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePeriod), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ExpensePeriod), "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpenseType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Expenses", "Expense", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Expense), "Expense1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.User), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePrices_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Employee), "ExpensePrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePrice), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Users_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.User), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePrices_ExpenseTypes", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ExpenseType), "ExpensePrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePrice), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePrices_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpensePrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePrice), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpensePrices_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpensePrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpensePrice), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "Expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpenseCategories_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpenseCategory), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpenseCategories_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpenseCategory), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ExpenseCategory), "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpenseType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Projects_ParentID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Project1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "Contract_Contract_ParentID", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contract), "Contract1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_LegalDetails_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "LegalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.LegalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_LegalDetails_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "LegalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.LegalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_PhysicalDetails_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "PhysicalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.PhysicalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_PhysicalDetails_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "PhysicalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.PhysicalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Files_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.File), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Files_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.File), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_Files", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.File), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorFiles_Files", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.File), "ContractorFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectFileCategory), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileTypes", "ProjectFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectFileType), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFileTypes_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFileType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFileTypes_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFileType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Salaries_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Employee), "Salary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Salary), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WorkLogs_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "WorkLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WorkLog), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Incidents_IncidentTypes", "IncidentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.IncidentType), "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Incidents_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Role), "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Incidents_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Incidents_Users_ForUserID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.User), "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WorkLogs_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "WorkLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WorkLog), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Salaries_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Salary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Salary), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WorkLogs_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "WorkLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WorkLog), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WorkLogs_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "WorkLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WorkLog), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_IncidentUsers_Incidents", "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Incident), "IncidentUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.IncidentUser), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_IncidentUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "IncidentUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.IncidentUser), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_IncidentUsers_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "IncidentUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.IncidentUser), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_IncidentUsers_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "IncidentUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.IncidentUser), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Incidents_RepeatIntervals", "RepeatInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.RepeatInterval), "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_RepeatIntervals_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "RepeatInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.RepeatInterval), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_RepeatIntervals_UsersCreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "RepeatInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.RepeatInterval), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "Incident_IncidentSecondaryID", "Incident", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Incident), "Incident1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Incident), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Refbooks_RefbookTypes", "RefbookType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.RefbookType), "Refbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Refbook), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Refbooks_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Refbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Refbook), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Refbooks_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Refbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Refbook), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Wallets", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Wallet), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Wallets_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Wallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Wallets", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Wallet), "Expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ExpenseTypes_Wallets", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Wallet), "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ExpenseType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Wallets", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Wallet), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Statbooks_StatbookTypes", "StatbookType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.StatbookType), "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Statbook), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Wallets_Statbooks_TypeID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Statbook), "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Wallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Transfers_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Transfer), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Transfers_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Transfer), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Transfers_Wallets_WalletFromID", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Wallet), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Transfer), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Transfers_Wallets_WalletToID", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Wallet), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Transfer), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WalletRatios_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "WalletRatio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WalletRatio), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WalletRatios_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "WalletRatio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WalletRatio), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Wallets_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Wallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Wallets_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Wallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletFromID", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Wallet), "WalletRatio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WalletRatio), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletToID", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Wallet), "WalletRatio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.WalletRatio), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_EmployeeWallets_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Employee), "EmployeeWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.EmployeeWallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_EmployeeWallets_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "EmployeeWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.EmployeeWallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_EmployeeWallets_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "EmployeeWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.EmployeeWallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_EmployeeWallets_Wallets", "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Wallet), "EmployeeWallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.EmployeeWallet), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactPersons_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "ContactPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactPerson), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorFiles_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Contractor), "ContractorFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_ContractorRoles", "ContractorRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContractorRole), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_ContractorTypes", "ContractorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContractorType), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contracts_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contract), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_LegalDetails_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Contractor), "LegalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.LegalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_PhysicalDetails_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Contractor), "PhysicalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.PhysicalDetail), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Contractors_ContractorID", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Contractors_SubcontractorID", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectWorks_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "ProjectWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectWork), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectEmployees_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Employee), "ProjectEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectEmployee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectEmployees_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectEmployee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectEmployees_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectEmployee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectEmployees_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectEmployee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectEmployees_Projects1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectEmployee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactPersons_Refbooks_TypeID", "Refbook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Refbook), "ContactPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactPerson), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContactPersons_Statbooks_GenderID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Statbook), "ContactPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContactPerson), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorNotes_Contractors_ContractorID", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Contractor), "ContractorNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorNotes_Refbooks_TypeID", "Refbook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Refbook), "ContractorNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorNotes_Users_ChangerID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ContractorNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorNotes_Users_CreatorID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ContractorNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_ProjectStatuses", "ProjectStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectStatus), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorStatuses_ContractorRoles", "ContractorRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ContractorRole), "ContractorStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorStatus), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_ContractorStatuses", "ContractorStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ContractorStatus), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_InformationSources", "InformationSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.InformationSource), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_InformationSources_InformationSources_ParentID", "InformationSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.InformationSource), "InformationSource1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.InformationSource), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_Users_ResponsibleID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.User), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_ContractorSubTypes", "ContractorSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ContractorSubType), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorTypes", "ContractorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ContractorType), "ContractorSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorSubType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorRoles", "ContractorRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ContractorRole), "ContractorSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ContractorSubType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Contractors_Departments", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Department), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_ProjectTypes", "ProjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectType), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTypes_ProjectTypes", "ProjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ProjectType), "ProjectType1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectType), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_News_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectNotes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Project), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTaskMessages_ProjectTasks", "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.ProjectTask), "ProjectTaskMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTaskMessage), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_StatusID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Statbook), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_TaskTypes", "TaskType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.TaskType), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectTask), "ProjectTask1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Invoices_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Invoice), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payments_Invoices", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Invoice), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payment), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payrolls_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Employee), "Payroll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payroll), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Payrolls_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Payroll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Payroll), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Expenses_Employees_SalaryEmployeeID", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "Expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Expense), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Employees_Files_PictureID", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.File), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ReportFilters_Statbooks_ReportID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.Statbook), "ReportFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ReportFilter), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ReportFilters_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdCrm.Models.User), "ReportFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ReportFilter), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Files_Folders", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Folder), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.File), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Folders_Folders_ParentID", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Folder), "Folder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Folder), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Folders_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Project), "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Folder), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_PriorityID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Statbook), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_TurnID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Statbook), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Users_Contractors", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Contractor), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.User), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_ProjectTasks", "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectTask), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.ProjectTaskMessage), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Invoices", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Invoice), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_Projects_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Employee), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.Project), true)]
[assembly: EdmRelationshipAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_VisibilityID", "Statbook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AdCrm.Models.Statbook), "ProjectTask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdCrm.Models.ProjectTask), true)]

#endregion

namespace AdCrm.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BuildingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BuildingEntities object using the connection string found in the 'BuildingEntities' section of the application configuration file.
        /// </summary>
        public BuildingEntities() : base("name=BuildingEntities", "BuildingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BuildingEntities object.
        /// </summary>
        public BuildingEntities(string connectionString) : base(connectionString, "BuildingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BuildingEntities object.
        /// </summary>
        public BuildingEntities(EntityConnection connection) : base(connection, "BuildingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Act> Acts
        {
            get
            {
                if ((_Acts == null))
                {
                    _Acts = base.CreateObjectSet<Act>("Acts");
                }
                return _Acts;
            }
        }
        private ObjectSet<Act> _Acts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactPerson> ContactPersons
        {
            get
            {
                if ((_ContactPersons == null))
                {
                    _ContactPersons = base.CreateObjectSet<ContactPerson>("ContactPersons");
                }
                return _ContactPersons;
            }
        }
        private ObjectSet<ContactPerson> _ContactPersons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactTypes
        {
            get
            {
                if ((_ContactTypes == null))
                {
                    _ContactTypes = base.CreateObjectSet<ContactType>("ContactTypes");
                }
                return _ContactTypes;
            }
        }
        private ObjectSet<ContactType> _ContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorRole> ContractorRoles
        {
            get
            {
                if ((_ContractorRoles == null))
                {
                    _ContractorRoles = base.CreateObjectSet<ContractorRole>("ContractorRoles");
                }
                return _ContractorRoles;
            }
        }
        private ObjectSet<ContractorRole> _ContractorRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorType> ContractorTypes
        {
            get
            {
                if ((_ContractorTypes == null))
                {
                    _ContractorTypes = base.CreateObjectSet<ContractorType>("ContractorTypes");
                }
                return _ContractorTypes;
            }
        }
        private ObjectSet<ContractorType> _ContractorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractRole> ContractRoles
        {
            get
            {
                if ((_ContractRoles == null))
                {
                    _ContractRoles = base.CreateObjectSet<ContractRole>("ContractRoles");
                }
                return _ContractRoles;
            }
        }
        private ObjectSet<ContractRole> _ContractRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdentityNumber> IdentityNumbers
        {
            get
            {
                if ((_IdentityNumbers == null))
                {
                    _IdentityNumbers = base.CreateObjectSet<IdentityNumber>("IdentityNumbers");
                }
                return _IdentityNumbers;
            }
        }
        private ObjectSet<IdentityNumber> _IdentityNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentRole> PaymentRoles
        {
            get
            {
                if ((_PaymentRoles == null))
                {
                    _PaymentRoles = base.CreateObjectSet<PaymentRole>("PaymentRoles");
                }
                return _PaymentRoles;
            }
        }
        private ObjectSet<PaymentRole> _PaymentRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectStage> ProjectStages
        {
            get
            {
                if ((_ProjectStages == null))
                {
                    _ProjectStages = base.CreateObjectSet<ProjectStage>("ProjectStages");
                }
                return _ProjectStages;
            }
        }
        private ObjectSet<ProjectStage> _ProjectStages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectWork> ProjectWorks
        {
            get
            {
                if ((_ProjectWorks == null))
                {
                    _ProjectWorks = base.CreateObjectSet<ProjectWork>("ProjectWorks");
                }
                return _ProjectWorks;
            }
        }
        private ObjectSet<ProjectWork> _ProjectWorks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemSetting> SystemSettings
        {
            get
            {
                if ((_SystemSettings == null))
                {
                    _SystemSettings = base.CreateObjectSet<SystemSetting>("SystemSettings");
                }
                return _SystemSettings;
            }
        }
        private ObjectSet<SystemSetting> _SystemSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSetting> UserSettings
        {
            get
            {
                if ((_UserSettings == null))
                {
                    _UserSettings = base.CreateObjectSet<UserSetting>("UserSettings");
                }
                return _UserSettings;
            }
        }
        private ObjectSet<UserSetting> _UserSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkType> WorkTypes
        {
            get
            {
                if ((_WorkTypes == null))
                {
                    _WorkTypes = base.CreateObjectSet<WorkType>("WorkTypes");
                }
                return _WorkTypes;
            }
        }
        private ObjectSet<WorkType> _WorkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DaysFromType> DaysFromTypes
        {
            get
            {
                if ((_DaysFromTypes == null))
                {
                    _DaysFromTypes = base.CreateObjectSet<DaysFromType>("DaysFromTypes");
                }
                return _DaysFromTypes;
            }
        }
        private ObjectSet<DaysFromType> _DaysFromTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Expense> Expenses
        {
            get
            {
                if ((_Expenses == null))
                {
                    _Expenses = base.CreateObjectSet<Expense>("Expenses");
                }
                return _Expenses;
            }
        }
        private ObjectSet<Expense> _Expenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseType> ExpenseTypes
        {
            get
            {
                if ((_ExpenseTypes == null))
                {
                    _ExpenseTypes = base.CreateObjectSet<ExpenseType>("ExpenseTypes");
                }
                return _ExpenseTypes;
            }
        }
        private ObjectSet<ExpenseType> _ExpenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpensePeriod> ExpensePeriods
        {
            get
            {
                if ((_ExpensePeriods == null))
                {
                    _ExpensePeriods = base.CreateObjectSet<ExpensePeriod>("ExpensePeriods");
                }
                return _ExpensePeriods;
            }
        }
        private ObjectSet<ExpensePeriod> _ExpensePeriods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpensePrice> ExpensePrices
        {
            get
            {
                if ((_ExpensePrices == null))
                {
                    _ExpensePrices = base.CreateObjectSet<ExpensePrice>("ExpensePrices");
                }
                return _ExpensePrices;
            }
        }
        private ObjectSet<ExpensePrice> _ExpensePrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseCategory> ExpenseCategories
        {
            get
            {
                if ((_ExpenseCategories == null))
                {
                    _ExpenseCategories = base.CreateObjectSet<ExpenseCategory>("ExpenseCategories");
                }
                return _ExpenseCategories;
            }
        }
        private ObjectSet<ExpenseCategory> _ExpenseCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalDetail> LegalDetails
        {
            get
            {
                if ((_LegalDetails == null))
                {
                    _LegalDetails = base.CreateObjectSet<LegalDetail>("LegalDetails");
                }
                return _LegalDetails;
            }
        }
        private ObjectSet<LegalDetail> _LegalDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalDetail> PhysicalDetails
        {
            get
            {
                if ((_PhysicalDetails == null))
                {
                    _PhysicalDetails = base.CreateObjectSet<PhysicalDetail>("PhysicalDetails");
                }
                return _PhysicalDetails;
            }
        }
        private ObjectSet<PhysicalDetail> _PhysicalDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFile> ProjectFiles
        {
            get
            {
                if ((_ProjectFiles == null))
                {
                    _ProjectFiles = base.CreateObjectSet<ProjectFile>("ProjectFiles");
                }
                return _ProjectFiles;
            }
        }
        private ObjectSet<ProjectFile> _ProjectFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorFile> ContractorFiles
        {
            get
            {
                if ((_ContractorFiles == null))
                {
                    _ContractorFiles = base.CreateObjectSet<ContractorFile>("ContractorFiles");
                }
                return _ContractorFiles;
            }
        }
        private ObjectSet<ContractorFile> _ContractorFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFileCategory> ProjectFileCategories
        {
            get
            {
                if ((_ProjectFileCategories == null))
                {
                    _ProjectFileCategories = base.CreateObjectSet<ProjectFileCategory>("ProjectFileCategories");
                }
                return _ProjectFileCategories;
            }
        }
        private ObjectSet<ProjectFileCategory> _ProjectFileCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFileType> ProjectFileTypes
        {
            get
            {
                if ((_ProjectFileTypes == null))
                {
                    _ProjectFileTypes = base.CreateObjectSet<ProjectFileType>("ProjectFileTypes");
                }
                return _ProjectFileTypes;
            }
        }
        private ObjectSet<ProjectFileType> _ProjectFileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Incident> Incidents
        {
            get
            {
                if ((_Incidents == null))
                {
                    _Incidents = base.CreateObjectSet<Incident>("Incidents");
                }
                return _Incidents;
            }
        }
        private ObjectSet<Incident> _Incidents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncidentType> IncidentTypes
        {
            get
            {
                if ((_IncidentTypes == null))
                {
                    _IncidentTypes = base.CreateObjectSet<IncidentType>("IncidentTypes");
                }
                return _IncidentTypes;
            }
        }
        private ObjectSet<IncidentType> _IncidentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Salary> Salaries
        {
            get
            {
                if ((_Salaries == null))
                {
                    _Salaries = base.CreateObjectSet<Salary>("Salaries");
                }
                return _Salaries;
            }
        }
        private ObjectSet<Salary> _Salaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkLog> WorkLogs
        {
            get
            {
                if ((_WorkLogs == null))
                {
                    _WorkLogs = base.CreateObjectSet<WorkLog>("WorkLogs");
                }
                return _WorkLogs;
            }
        }
        private ObjectSet<WorkLog> _WorkLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IncidentUser> IncidentUsers
        {
            get
            {
                if ((_IncidentUsers == null))
                {
                    _IncidentUsers = base.CreateObjectSet<IncidentUser>("IncidentUsers");
                }
                return _IncidentUsers;
            }
        }
        private ObjectSet<IncidentUser> _IncidentUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RepeatInterval> RepeatIntervals
        {
            get
            {
                if ((_RepeatIntervals == null))
                {
                    _RepeatIntervals = base.CreateObjectSet<RepeatInterval>("RepeatIntervals");
                }
                return _RepeatIntervals;
            }
        }
        private ObjectSet<RepeatInterval> _RepeatIntervals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Refbook> Refbooks
        {
            get
            {
                if ((_Refbooks == null))
                {
                    _Refbooks = base.CreateObjectSet<Refbook>("Refbooks");
                }
                return _Refbooks;
            }
        }
        private ObjectSet<Refbook> _Refbooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RefbookType> RefbookTypes
        {
            get
            {
                if ((_RefbookTypes == null))
                {
                    _RefbookTypes = base.CreateObjectSet<RefbookType>("RefbookTypes");
                }
                return _RefbookTypes;
            }
        }
        private ObjectSet<RefbookType> _RefbookTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Statbook> Statbooks
        {
            get
            {
                if ((_Statbooks == null))
                {
                    _Statbooks = base.CreateObjectSet<Statbook>("Statbooks");
                }
                return _Statbooks;
            }
        }
        private ObjectSet<Statbook> _Statbooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatbookType> StatbookTypes
        {
            get
            {
                if ((_StatbookTypes == null))
                {
                    _StatbookTypes = base.CreateObjectSet<StatbookType>("StatbookTypes");
                }
                return _StatbookTypes;
            }
        }
        private ObjectSet<StatbookType> _StatbookTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transfer> Transfers
        {
            get
            {
                if ((_Transfers == null))
                {
                    _Transfers = base.CreateObjectSet<Transfer>("Transfers");
                }
                return _Transfers;
            }
        }
        private ObjectSet<Transfer> _Transfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WalletRatio> WalletRatios
        {
            get
            {
                if ((_WalletRatios == null))
                {
                    _WalletRatios = base.CreateObjectSet<WalletRatio>("WalletRatios");
                }
                return _WalletRatios;
            }
        }
        private ObjectSet<WalletRatio> _WalletRatios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wallet> Wallets
        {
            get
            {
                if ((_Wallets == null))
                {
                    _Wallets = base.CreateObjectSet<Wallet>("Wallets");
                }
                return _Wallets;
            }
        }
        private ObjectSet<Wallet> _Wallets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeWallet> EmployeeWallets
        {
            get
            {
                if ((_EmployeeWallets == null))
                {
                    _EmployeeWallets = base.CreateObjectSet<EmployeeWallet>("EmployeeWallets");
                }
                return _EmployeeWallets;
            }
        }
        private ObjectSet<EmployeeWallet> _EmployeeWallets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contractor> Contractors
        {
            get
            {
                if ((_Contractors == null))
                {
                    _Contractors = base.CreateObjectSet<Contractor>("Contractors");
                }
                return _Contractors;
            }
        }
        private ObjectSet<Contractor> _Contractors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectEmployee> ProjectEmployees
        {
            get
            {
                if ((_ProjectEmployees == null))
                {
                    _ProjectEmployees = base.CreateObjectSet<ProjectEmployee>("ProjectEmployees");
                }
                return _ProjectEmployees;
            }
        }
        private ObjectSet<ProjectEmployee> _ProjectEmployees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorNote> ContractorNotes
        {
            get
            {
                if ((_ContractorNotes == null))
                {
                    _ContractorNotes = base.CreateObjectSet<ContractorNote>("ContractorNotes");
                }
                return _ContractorNotes;
            }
        }
        private ObjectSet<ContractorNote> _ContractorNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectStatus> ProjectStatuses
        {
            get
            {
                if ((_ProjectStatuses == null))
                {
                    _ProjectStatuses = base.CreateObjectSet<ProjectStatus>("ProjectStatuses");
                }
                return _ProjectStatuses;
            }
        }
        private ObjectSet<ProjectStatus> _ProjectStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorStatus> ContractorStatuses
        {
            get
            {
                if ((_ContractorStatuses == null))
                {
                    _ContractorStatuses = base.CreateObjectSet<ContractorStatus>("ContractorStatuses");
                }
                return _ContractorStatuses;
            }
        }
        private ObjectSet<ContractorStatus> _ContractorStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InformationSource> InformationSources
        {
            get
            {
                if ((_InformationSources == null))
                {
                    _InformationSources = base.CreateObjectSet<InformationSource>("InformationSources");
                }
                return _InformationSources;
            }
        }
        private ObjectSet<InformationSource> _InformationSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorSubType> ContractorSubTypes
        {
            get
            {
                if ((_ContractorSubTypes == null))
                {
                    _ContractorSubTypes = base.CreateObjectSet<ContractorSubType>("ContractorSubTypes");
                }
                return _ContractorSubTypes;
            }
        }
        private ObjectSet<ContractorSubType> _ContractorSubTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectType> ProjectTypes
        {
            get
            {
                if ((_ProjectTypes == null))
                {
                    _ProjectTypes = base.CreateObjectSet<ProjectType>("ProjectTypes");
                }
                return _ProjectTypes;
            }
        }
        private ObjectSet<ProjectType> _ProjectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectNote> ProjectNotes
        {
            get
            {
                if ((_ProjectNotes == null))
                {
                    _ProjectNotes = base.CreateObjectSet<ProjectNote>("ProjectNotes");
                }
                return _ProjectNotes;
            }
        }
        private ObjectSet<ProjectNote> _ProjectNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectTaskMessage> ProjectTaskMessages
        {
            get
            {
                if ((_ProjectTaskMessages == null))
                {
                    _ProjectTaskMessages = base.CreateObjectSet<ProjectTaskMessage>("ProjectTaskMessages");
                }
                return _ProjectTaskMessages;
            }
        }
        private ObjectSet<ProjectTaskMessage> _ProjectTaskMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectTask> ProjectTasks
        {
            get
            {
                if ((_ProjectTasks == null))
                {
                    _ProjectTasks = base.CreateObjectSet<ProjectTask>("ProjectTasks");
                }
                return _ProjectTasks;
            }
        }
        private ObjectSet<ProjectTask> _ProjectTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskType> TaskTypes
        {
            get
            {
                if ((_TaskTypes == null))
                {
                    _TaskTypes = base.CreateObjectSet<TaskType>("TaskTypes");
                }
                return _TaskTypes;
            }
        }
        private ObjectSet<TaskType> _TaskTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payroll> Payrolls
        {
            get
            {
                if ((_Payrolls == null))
                {
                    _Payrolls = base.CreateObjectSet<Payroll>("Payrolls");
                }
                return _Payrolls;
            }
        }
        private ObjectSet<Payroll> _Payrolls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportFilter> ReportFilters
        {
            get
            {
                if ((_ReportFilters == null))
                {
                    _ReportFilters = base.CreateObjectSet<ReportFilter>("ReportFilters");
                }
                return _ReportFilters;
            }
        }
        private ObjectSet<ReportFilter> _ReportFilters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folders
        {
            get
            {
                if ((_Folders == null))
                {
                    _Folders = base.CreateObjectSet<Folder>("Folders");
                }
                return _Folders;
            }
        }
        private ObjectSet<Folder> _Folders;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Acts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActs(Act act)
        {
            base.AddObject("Acts", act);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactPersons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactPersons(ContactPerson contactPerson)
        {
            base.AddObject("ContactPersons", contactPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTypes(ContactType contactType)
        {
            base.AddObject("ContactTypes", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorRoles(ContractorRole contractorRole)
        {
            base.AddObject("ContractorRoles", contractorRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorTypes(ContractorType contractorType)
        {
            base.AddObject("ContractorTypes", contractorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractRoles(ContractRole contractRole)
        {
            base.AddObject("ContractRoles", contractRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdentityNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdentityNumbers(IdentityNumber identityNumber)
        {
            base.AddObject("IdentityNumbers", identityNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentRoles(PaymentRole paymentRole)
        {
            base.AddObject("PaymentRoles", paymentRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectStages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectStages(ProjectStage projectStage)
        {
            base.AddObject("ProjectStages", projectStage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectWorks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectWorks(ProjectWork projectWork)
        {
            base.AddObject("ProjectWorks", projectWork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemSettings(SystemSetting systemSetting)
        {
            base.AddObject("SystemSettings", systemSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSettings(UserSetting userSetting)
        {
            base.AddObject("UserSettings", userSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkTypes(WorkType workType)
        {
            base.AddObject("WorkTypes", workType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DaysFromTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDaysFromTypes(DaysFromType daysFromType)
        {
            base.AddObject("DaysFromTypes", daysFromType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Expenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenses(Expense expense)
        {
            base.AddObject("Expenses", expense);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTypes(ExpenseType expenseType)
        {
            base.AddObject("ExpenseTypes", expenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpensePeriods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpensePeriods(ExpensePeriod expensePeriod)
        {
            base.AddObject("ExpensePeriods", expensePeriod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpensePrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpensePrices(ExpensePrice expensePrice)
        {
            base.AddObject("ExpensePrices", expensePrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseCategories(ExpenseCategory expenseCategory)
        {
            base.AddObject("ExpenseCategories", expenseCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalDetails(LegalDetail legalDetail)
        {
            base.AddObject("LegalDetails", legalDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalDetails(PhysicalDetail physicalDetail)
        {
            base.AddObject("PhysicalDetails", physicalDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFiles(ProjectFile projectFile)
        {
            base.AddObject("ProjectFiles", projectFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorFiles(ContractorFile contractorFile)
        {
            base.AddObject("ContractorFiles", contractorFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFileCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFileCategories(ProjectFileCategory projectFileCategory)
        {
            base.AddObject("ProjectFileCategories", projectFileCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFileTypes(ProjectFileType projectFileType)
        {
            base.AddObject("ProjectFileTypes", projectFileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Incidents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidents(Incident incident)
        {
            base.AddObject("Incidents", incident);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncidentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidentTypes(IncidentType incidentType)
        {
            base.AddObject("IncidentTypes", incidentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Salaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalaries(Salary salary)
        {
            base.AddObject("Salaries", salary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkLogs(WorkLog workLog)
        {
            base.AddObject("WorkLogs", workLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IncidentUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIncidentUsers(IncidentUser incidentUser)
        {
            base.AddObject("IncidentUsers", incidentUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RepeatIntervals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepeatIntervals(RepeatInterval repeatInterval)
        {
            base.AddObject("RepeatIntervals", repeatInterval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Refbooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRefbooks(Refbook refbook)
        {
            base.AddObject("Refbooks", refbook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RefbookTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRefbookTypes(RefbookType refbookType)
        {
            base.AddObject("RefbookTypes", refbookType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statbooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatbooks(Statbook statbook)
        {
            base.AddObject("Statbooks", statbook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatbookTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatbookTypes(StatbookType statbookType)
        {
            base.AddObject("StatbookTypes", statbookType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransfers(Transfer transfer)
        {
            base.AddObject("Transfers", transfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WalletRatios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWalletRatios(WalletRatio walletRatio)
        {
            base.AddObject("WalletRatios", walletRatio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wallets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWallets(Wallet wallet)
        {
            base.AddObject("Wallets", wallet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeWallets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeWallets(EmployeeWallet employeeWallet)
        {
            base.AddObject("EmployeeWallets", employeeWallet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contractors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractors(Contractor contractor)
        {
            base.AddObject("Contractors", contractor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectEmployees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectEmployees(ProjectEmployee projectEmployee)
        {
            base.AddObject("ProjectEmployees", projectEmployee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorNotes(ContractorNote contractorNote)
        {
            base.AddObject("ContractorNotes", contractorNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectStatuses(ProjectStatus projectStatus)
        {
            base.AddObject("ProjectStatuses", projectStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorStatuses(ContractorStatus contractorStatus)
        {
            base.AddObject("ContractorStatuses", contractorStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InformationSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInformationSources(InformationSource informationSource)
        {
            base.AddObject("InformationSources", informationSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorSubTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorSubTypes(ContractorSubType contractorSubType)
        {
            base.AddObject("ContractorSubTypes", contractorSubType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectTypes(ProjectType projectType)
        {
            base.AddObject("ProjectTypes", projectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectNotes(ProjectNote projectNote)
        {
            base.AddObject("ProjectNotes", projectNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectTaskMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectTaskMessages(ProjectTaskMessage projectTaskMessage)
        {
            base.AddObject("ProjectTaskMessages", projectTaskMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectTasks(ProjectTask projectTask)
        {
            base.AddObject("ProjectTasks", projectTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskTypes(TaskType taskType)
        {
            base.AddObject("TaskTypes", taskType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payrolls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayrolls(Payroll payroll)
        {
            base.AddObject("Payrolls", payroll);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportFilters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportFilters(ReportFilter reportFilter)
        {
            base.AddObject("ReportFilters", reportFilter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolders(Folder folder)
        {
            base.AddObject("Folders", folder);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Act")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Act : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Act object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="signed">Initial value of the Signed property.</param>
        /// <param name="originalExists">Initial value of the OriginalExists property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static Act CreateAct(global::System.Int32 id, global::System.Boolean signed, global::System.Boolean originalExists, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Boolean deleted, global::System.Int32 contractID, global::System.Int32 companyID)
        {
            Act act = new Act();
            act.ID = id;
            act.Signed = signed;
            act.OriginalExists = originalExists;
            act.CreatorID = creatorID;
            act.ChangerID = changerID;
            act.CreateDate = createDate;
            act.ChangeDate = changeDate;
            act.Deleted = deleted;
            act.ContractID = contractID;
            act.CompanyID = companyID;
            return act;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Signed
        {
            get
            {
                return _Signed;
            }
            set
            {
                OnSignedChanging(value);
                ReportPropertyChanging("Signed");
                _Signed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Signed");
                OnSignedChanged();
            }
        }
        private global::System.Boolean _Signed;
        partial void OnSignedChanging(global::System.Boolean value);
        partial void OnSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OriginalExists
        {
            get
            {
                return _OriginalExists;
            }
            set
            {
                OnOriginalExistsChanging(value);
                ReportPropertyChanging("OriginalExists");
                _OriginalExists = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalExists");
                OnOriginalExistsChanged();
            }
        }
        private global::System.Boolean _OriginalExists;
        partial void OnOriginalExistsChanging(global::System.Boolean value);
        partial void OnOriginalExistsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSign
        {
            get
            {
                return _DateSign;
            }
            set
            {
                OnDateSignChanging(value);
                ReportPropertyChanging("DateSign");
                _DateSign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSign");
                OnDateSignChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSign;
        partial void OnDateSignChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Contracts", "Contracts")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Acts_Contracts", "Contracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Acts_Contracts", "Contracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Acts_Contracts", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("BuildingModel.FK_Acts_Contracts", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Users_ChangerID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Acts_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Users_CreatorID", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Acts_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Acts_Users_CreatorID", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static Contact CreateContact(global::System.Int32 id, global::System.Int32 typeID, global::System.String text, global::System.Int32 personID)
        {
            Contact contact = new Contact();
            contact.ID = id;
            contact.TypeID = typeID;
            contact.Text = text;
            contact.PersonID = personID;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contacts_ContactPersons", "ContactPersons")]
        public ContactPerson ContactPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactPerson>("BuildingModel.FK_Contacts_ContactPersons", "ContactPersons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactPerson>("BuildingModel.FK_Contacts_ContactPersons", "ContactPersons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactPerson> ContactPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactPerson>("BuildingModel.FK_Contacts_ContactPersons", "ContactPersons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactPerson>("BuildingModel.FK_Contacts_ContactPersons", "ContactPersons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contacts_ContactTypes", "ContactTypes")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_Contacts_ContactTypes", "ContactTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_Contacts_ContactTypes", "ContactTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_Contacts_ContactTypes", "ContactTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("BuildingModel.FK_Contacts_ContactTypes", "ContactTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContactPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactPerson object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isMain">Initial value of the IsMain property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="archived">Initial value of the Archived property.</param>
        /// <param name="isSigner">Initial value of the IsSigner property.</param>
        public static ContactPerson CreateContactPerson(global::System.Int32 id, global::System.String name, global::System.Boolean isMain, global::System.Boolean deleted, global::System.Int32 creatorID, global::System.DateTime createDate, global::System.Int32 changerID, global::System.DateTime changeDate, global::System.Boolean archived, global::System.Boolean isSigner)
        {
            ContactPerson contactPerson = new ContactPerson();
            contactPerson.ID = id;
            contactPerson.Name = name;
            contactPerson.IsMain = isMain;
            contactPerson.Deleted = deleted;
            contactPerson.CreatorID = creatorID;
            contactPerson.CreateDate = createDate;
            contactPerson.ChangerID = changerID;
            contactPerson.ChangeDate = changeDate;
            contactPerson.Archived = archived;
            contactPerson.IsSigner = isSigner;
            return contactPerson;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMain
        {
            get
            {
                return _IsMain;
            }
            set
            {
                OnIsMainChanging(value);
                ReportPropertyChanging("IsMain");
                _IsMain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMain");
                OnIsMainChanged();
            }
        }
        private global::System.Boolean _IsMain;
        partial void OnIsMainChanging(global::System.Boolean value);
        partial void OnIsMainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.Boolean _Archived;
        partial void OnArchivedChanging(global::System.Boolean value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSigner
        {
            get
            {
                return _IsSigner;
            }
            set
            {
                OnIsSignerChanging(value);
                ReportPropertyChanging("IsSigner");
                _IsSigner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSigner");
                OnIsSignerChanged();
            }
        }
        private global::System.Boolean _IsSigner;
        partial void OnIsSignerChanging(global::System.Boolean value);
        partial void OnIsSignerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                OnGenderIDChanging(value);
                ReportPropertyChanging("GenderID");
                _GenderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderID");
                OnGenderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GenderID;
        partial void OnGenderIDChanging(Nullable<global::System.Int32> value);
        partial void OnGenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Users_ChangerID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Users_CreatorID", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ContactPersons_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contacts_ContactPersons", "Contacts")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("BuildingModel.FK_Contacts_ContactPersons", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("BuildingModel.FK_Contacts_ContactPersons", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContactPersons_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContactPersons_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContactPersons_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_ContactPersons_Contractors", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Refbooks_TypeID", "Refbook")]
        public Refbook Refbook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "Refbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "Refbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Refbook> RefbookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "Refbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Refbook>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "Refbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Statbooks_GenderID", "Statbook")]
        public Statbook Statbook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> StatbookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "Statbook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static ContactType CreateContactType(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 orderNumber, global::System.Int32 companyID)
        {
            ContactType contactType = new ContactType();
            contactType.ID = id;
            contactType.Name = name;
            contactType.Deleted = deleted;
            contactType.OrderNumber = orderNumber;
            contactType.CompanyID = companyID;
            return contactType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contacts_ContactTypes", "Contacts")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("BuildingModel.FK_Contacts_ContactTypes", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("BuildingModel.FK_Contacts_ContactTypes", "Contacts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactTypes_ContactTypes", "ContactTypes1")]
        public EntityCollection<ContactType> ContactTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactTypes_ContactTypes", "ContactTypes")]
        public ContactType ContactType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("BuildingModel.FK_ContactTypes_ContactTypes", "ContactTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="originalExists">Initial value of the OriginalExists property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Contract CreateContract(global::System.Int32 id, global::System.String number, global::System.Boolean originalExists, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 roleID, global::System.Int32 companyID, global::System.Boolean deleted)
        {
            Contract contract = new Contract();
            contract.ID = id;
            contract.Number = number;
            contract.OriginalExists = originalExists;
            contract.CreatorID = creatorID;
            contract.ChangerID = changerID;
            contract.CreateDate = createDate;
            contract.ChangeDate = changeDate;
            contract.RoleID = roleID;
            contract.CompanyID = companyID;
            contract.Deleted = deleted;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSign
        {
            get
            {
                return _DateSign;
            }
            set
            {
                OnDateSignChanging(value);
                ReportPropertyChanging("DateSign");
                _DateSign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSign");
                OnDateSignChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSign;
        partial void OnDateSignChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OriginalExists
        {
            get
            {
                return _OriginalExists;
            }
            set
            {
                OnOriginalExistsChanging(value);
                ReportPropertyChanging("OriginalExists");
                _OriginalExists = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalExists");
                OnOriginalExistsChanged();
            }
        }
        private global::System.Boolean _OriginalExists;
        partial void OnOriginalExistsChanging(global::System.Boolean value);
        partial void OnOriginalExistsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdvance
        {
            get
            {
                return _DateAdvance;
            }
            set
            {
                OnDateAdvanceChanging(value);
                ReportPropertyChanging("DateAdvance");
                _DateAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdvance");
                OnDateAdvanceChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdvance;
        partial void OnDateAdvanceChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysEnd
        {
            get
            {
                return _DaysEnd;
            }
            set
            {
                OnDaysEndChanging(value);
                ReportPropertyChanging("DaysEnd");
                _DaysEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysEnd");
                OnDaysEndChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysEnd;
        partial void OnDaysEndChanging(Nullable<global::System.Int32> value);
        partial void OnDaysEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysTypeID
        {
            get
            {
                return _DaysTypeID;
            }
            set
            {
                OnDaysTypeIDChanging(value);
                ReportPropertyChanging("DaysTypeID");
                _DaysTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysTypeID");
                OnDaysTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysTypeID;
        partial void OnDaysTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysFromTypeID
        {
            get
            {
                return _DaysFromTypeID;
            }
            set
            {
                OnDaysFromTypeIDChanging(value);
                ReportPropertyChanging("DaysFromTypeID");
                _DaysFromTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysFromTypeID");
                OnDaysFromTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysFromTypeID;
        partial void OnDaysFromTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysFromTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SumAdvance
        {
            get
            {
                return _SumAdvance;
            }
            set
            {
                OnSumAdvanceChanging(value);
                ReportPropertyChanging("SumAdvance");
                _SumAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SumAdvance");
                OnSumAdvanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SumAdvance;
        partial void OnSumAdvanceChanging(Nullable<global::System.Decimal> value);
        partial void OnSumAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Contracts", "Acts")]
        public EntityCollection<Act> Acts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Act>("BuildingModel.FK_Acts_Contracts", "Acts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Act>("BuildingModel.FK_Acts_Contracts", "Acts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_ContractRoles", "ContractRoles")]
        public ContractRole ContractRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractRole>("BuildingModel.FK_Contracts_ContractRoles", "ContractRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractRole>("BuildingModel.FK_Contracts_ContractRoles", "ContractRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractRole> ContractRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractRole>("BuildingModel.FK_Contracts_ContractRoles", "ContractRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractRole>("BuildingModel.FK_Contracts_ContractRoles", "ContractRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Contracts_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Contracts_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Contracts_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Contracts_Projects", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Users_ChangerID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Contracts_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Users_CreatorID", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contracts_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Contracts_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Contracts", "ProjectWorks")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Contracts", "ProjectWorks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Contracts", "ProjectWorks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_DaysFromTypes", "DaysFromType")]
        public DaysFromType DaysFromType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Contracts_DaysFromTypes", "DaysFromType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Contracts_DaysFromTypes", "DaysFromType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DaysFromType> DaysFromTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Contracts_DaysFromTypes", "DaysFromType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DaysFromType>("BuildingModel.FK_Contracts_DaysFromTypes", "DaysFromType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contracts", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Contracts", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Contracts", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "Contract_Contract_ParentID", "Contract1")]
        public EntityCollection<Contract> ChildContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "Contract_Contract_ParentID", "Contract")]
        public Contract ParentContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ParentContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("BuildingModel.Contract_Contract_ParentID", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Contracts_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Contracts_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Contracts_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_Contracts_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Contractor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contractor object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="archived">Initial value of the Archived property.</param>
        public static Contractor CreateContractor(global::System.Int32 id, global::System.String name, global::System.Int32 typeID, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 roleID, global::System.Boolean deleted, global::System.Boolean archived)
        {
            Contractor contractor = new Contractor();
            contractor.ID = id;
            contractor.Name = name;
            contractor.TypeID = typeID;
            contractor.CreatorID = creatorID;
            contractor.ChangerID = changerID;
            contractor.CreateDate = createDate;
            contractor.ChangeDate = changeDate;
            contractor.RoleID = roleID;
            contractor.Deleted = deleted;
            contractor.Archived = archived;
            return contractor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Specialization
        {
            get
            {
                return _Specialization;
            }
            set
            {
                OnSpecializationChanging(value);
                ReportPropertyChanging("Specialization");
                _Specialization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Specialization");
                OnSpecializationChanged();
            }
        }
        private global::System.String _Specialization;
        partial void OnSpecializationChanging(global::System.String value);
        partial void OnSpecializationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.Boolean _Archived;
        partial void OnArchivedChanging(global::System.Boolean value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceID;
        partial void OnSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResponsibleID
        {
            get
            {
                return _ResponsibleID;
            }
            set
            {
                OnResponsibleIDChanging(value);
                ReportPropertyChanging("ResponsibleID");
                _ResponsibleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleID");
                OnResponsibleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResponsibleID;
        partial void OnResponsibleIDChanging(Nullable<global::System.Int32> value);
        partial void OnResponsibleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubTypeID
        {
            get
            {
                return _SubTypeID;
            }
            set
            {
                OnSubTypeIDChanging(value);
                ReportPropertyChanging("SubTypeID");
                _SubTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubTypeID");
                OnSubTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubTypeID;
        partial void OnSubTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentID;
        partial void OnDepartmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Contractors", "ContactPerson")]
        public EntityCollection<ContactPerson> ContactPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Contractors", "ContactPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Contractors", "ContactPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorFiles_Contractors", "ContractorFile")]
        public EntityCollection<ContractorFile> ContractorFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorFile>("BuildingModel.FK_ContractorFiles_Contractors", "ContractorFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorFile>("BuildingModel.FK_ContractorFiles_Contractors", "ContractorFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorRoles", "ContractorRole")]
        public ContractorRole ContractorRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_Contractors_ContractorRoles", "ContractorRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_Contractors_ContractorRoles", "ContractorRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorRole> ContractorRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_Contractors_ContractorRoles", "ContractorRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorRole>("BuildingModel.FK_Contractors_ContractorRoles", "ContractorRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorTypes", "ContractorType")]
        public ContractorType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_Contractors_ContractorTypes", "ContractorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_Contractors_ContractorTypes", "ContractorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_Contractors_ContractorTypes", "ContractorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorType>("BuildingModel.FK_Contractors_ContractorTypes", "ContractorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Contractors_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Contractors_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Contractors", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_Contractors", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_Contractors", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Contractors", "LegalDetail")]
        public EntityCollection<LegalDetail> LegalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Contractors", "LegalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Contractors", "LegalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Contractors", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Contractors", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Contractors", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Contractors", "PhysicalDetail")]
        public EntityCollection<PhysicalDetail> PhysicalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Contractors", "PhysicalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Contractors", "PhysicalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contractors_ContractorID", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Contractors_ContractorID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Contractors_ContractorID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contractors_SubcontractorID", "Project")]
        public EntityCollection<Project> Projects1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Contractors", "ProjectWork")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Contractors", "ProjectWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Contractors", "ProjectWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Contractors_ContractorID", "ContractorNote")]
        public EntityCollection<ContractorNote> ContractorNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "ContractorNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "ContractorNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorStatuses", "ContractorStatus")]
        public ContractorStatus Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorStatus>("BuildingModel.FK_Contractors_ContractorStatuses", "ContractorStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorStatus>("BuildingModel.FK_Contractors_ContractorStatuses", "ContractorStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorStatus> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorStatus>("BuildingModel.FK_Contractors_ContractorStatuses", "ContractorStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorStatus>("BuildingModel.FK_Contractors_ContractorStatuses", "ContractorStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_InformationSources", "InformationSource")]
        public InformationSource Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_Contractors_InformationSources", "InformationSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_Contractors_InformationSources", "InformationSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InformationSource> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_Contractors_InformationSources", "InformationSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InformationSource>("BuildingModel.FK_Contractors_InformationSources", "InformationSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_ResponsibleID", "User")]
        public User UserResponsible
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ResponsibleID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ResponsibleID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserResponsibleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Contractors_Users_ResponsibleID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Contractors_Users_ResponsibleID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorSubTypes", "ContractorSubType")]
        public ContractorSubType SubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorSubType>("BuildingModel.FK_Contractors_ContractorSubTypes", "ContractorSubType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorSubType>("BuildingModel.FK_Contractors_ContractorSubTypes", "ContractorSubType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorSubType> SubTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorSubType>("BuildingModel.FK_Contractors_ContractorSubTypes", "ContractorSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorSubType>("BuildingModel.FK_Contractors_ContractorSubTypes", "ContractorSubType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Departments", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Contractors_Departments", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Contractors_Departments", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Contractors_Departments", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("BuildingModel.FK_Contractors_Departments", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Contractors", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BuildingModel.FK_Users_Contractors", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BuildingModel.FK_Users_Contractors", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contractorID">Initial value of the ContractorID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        public static ContractorFile CreateContractorFile(global::System.Int32 id, global::System.Int32 contractorID, global::System.Int32 fileID)
        {
            ContractorFile contractorFile = new ContractorFile();
            contractorFile.ID = id;
            contractorFile.ContractorID = contractorID;
            contractorFile.FileID = fileID;
            return contractorFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private global::System.Int32 _ContractorID;
        partial void OnContractorIDChanging(global::System.Int32 value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorFiles_Files", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ContractorFiles_Files", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ContractorFiles_Files", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ContractorFiles_Files", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("BuildingModel.FK_ContractorFiles_Files", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorFiles_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorFiles_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorFiles_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorFiles_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_ContractorFiles_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contractorID">Initial value of the ContractorID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static ContractorNote CreateContractorNote(global::System.Int32 id, global::System.Int32 contractorID, global::System.DateTime date, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 typeID)
        {
            ContractorNote contractorNote = new ContractorNote();
            contractorNote.ID = id;
            contractorNote.ContractorID = contractorID;
            contractorNote.Date = date;
            contractorNote.CreateDate = createDate;
            contractorNote.ChangeDate = changeDate;
            contractorNote.CreatorID = creatorID;
            contractorNote.ChangerID = changerID;
            contractorNote.TypeID = typeID;
            return contractorNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private global::System.Int32 _ContractorID;
        partial void OnContractorIDChanging(global::System.Int32 value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Contractors_ContractorID", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_ContractorNotes_Contractors_ContractorID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Refbooks_TypeID", "Refbook")]
        public Refbook Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "Refbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "Refbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Refbook> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Refbook>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "Refbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Refbook>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "Refbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static ContractorRole CreateContractorRole(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            ContractorRole contractorRole = new ContractorRole();
            contractorRole.ID = id;
            contractorRole.Name = name;
            contractorRole.SysName = sysName;
            return contractorRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorRoles", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorRoles", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorRoles", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorStatuses_ContractorRoles", "ContractorStatus")]
        public EntityCollection<ContractorStatus> ContractorStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorStatus>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorStatus>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorRoles", "ContractorSubType")]
        public EntityCollection<ContractorSubType> ContractorSubTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorSubType>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorSubType>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorSubType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static ContractorStatus CreateContractorStatus(global::System.Int32 id, global::System.String name, global::System.Int32 orderNumber)
        {
            ContractorStatus contractorStatus = new ContractorStatus();
            contractorStatus.ID = id;
            contractorStatus.Name = name;
            contractorStatus.OrderNumber = orderNumber;
            return contractorStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorStatuses_ContractorRoles", "ContractorRole")]
        public ContractorRole ContractorRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorRole> ContractorRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorRole>("BuildingModel.FK_ContractorStatuses_ContractorRoles", "ContractorRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorStatuses", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorStatuses", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorStatuses", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorSubType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorSubType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorSubType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="needDepartment">Initial value of the NeedDepartment property.</param>
        public static ContractorSubType CreateContractorSubType(global::System.Int32 id, global::System.String name, global::System.Int32 orderNumber, global::System.Boolean deleted, global::System.Int32 typeID, global::System.Boolean needDepartment)
        {
            ContractorSubType contractorSubType = new ContractorSubType();
            contractorSubType.ID = id;
            contractorSubType.Name = name;
            contractorSubType.OrderNumber = orderNumber;
            contractorSubType.Deleted = deleted;
            contractorSubType.TypeID = typeID;
            contractorSubType.NeedDepartment = needDepartment;
            return contractorSubType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedDepartment
        {
            get
            {
                return _NeedDepartment;
            }
            set
            {
                OnNeedDepartmentChanging(value);
                ReportPropertyChanging("NeedDepartment");
                _NeedDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedDepartment");
                OnNeedDepartmentChanged();
            }
        }
        private global::System.Boolean _NeedDepartment;
        partial void OnNeedDepartmentChanging(global::System.Boolean value);
        partial void OnNeedDepartmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorSubTypes", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorSubTypes", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorSubTypes", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorTypes", "ContractorType")]
        public ContractorType ContractorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorType> ContractorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorRoles", "ContractorRole")]
        public ContractorRole ContractorRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorRole> ContractorRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorRole>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorRole>("BuildingModel.FK_ContractorSubTypes_ContractorRoles", "ContractorRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static ContractorType CreateContractorType(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            ContractorType contractorType = new ContractorType();
            contractorType.ID = id;
            contractorType.Name = name;
            contractorType.SysName = sysName;
            return contractorType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_ContractorTypes", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorTypes", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_ContractorTypes", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorSubTypes_ContractorTypes", "ContractorSubType")]
        public EntityCollection<ContractorSubType> ContractorSubTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorSubType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorSubType>("BuildingModel.FK_ContractorSubTypes_ContractorTypes", "ContractorSubType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ContractRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static ContractRole CreateContractRole(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            ContractRole contractRole = new ContractRole();
            contractRole.ID = id;
            contractRole.Name = name;
            contractRole.SysName = sysName;
            return contractRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_ContractRoles", "Contracts")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_ContractRoles", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_ContractRoles", "Contracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="DaysFromType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DaysFromType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DaysFromType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static DaysFromType CreateDaysFromType(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            DaysFromType daysFromType = new DaysFromType();
            daysFromType.ID = id;
            daysFromType.Name = name;
            daysFromType.SysName = sysName;
            return daysFromType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_DaysFromTypes", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_DaysFromTypes", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_DaysFromTypes", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_DaysFromTypes", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_DaysFromTypes", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_DaysFromTypes", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_DaysFromTypes", "ProjectWork")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "ProjectWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "ProjectWork", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="managerID">Initial value of the ManagerID property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Boolean deleted, global::System.Int32 managerID, global::System.Int32 orderNumber)
        {
            Department department = new Department();
            department.ID = id;
            department.Name = name;
            department.CreateDate = createDate;
            department.ChangeDate = changeDate;
            department.CreatorID = creatorID;
            department.ChangerID = changerID;
            department.Deleted = deleted;
            department.ManagerID = managerID;
            department.OrderNumber = orderNumber;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private global::System.Int32 _ManagerID;
        partial void OnManagerIDChanging(global::System.Int32 value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Departments_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Departments_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_ManagerID", "User")]
        public User Manager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ManagerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ManagerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ManagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Departments_Users_ManagerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Departments_Users_ManagerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Departments", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Departments", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Departments", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Positions_Departments", "Position")]
        public EntityCollection<Position> Positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("BuildingModel.FK_Positions_Departments", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("BuildingModel.FK_Positions_Departments", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Departments", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Departments", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Departments", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.Int32 id, global::System.DateTime createDate)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.ID = id;
            emailTemplate.CreateDate = createDate;
            return emailTemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Changer
        {
            get
            {
                return _Changer;
            }
            set
            {
                OnChangerChanging(value);
                ReportPropertyChanging("Changer");
                _Changer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Changer");
                OnChangerChanged();
            }
        }
        private global::System.String _Changer;
        partial void OnChangerChanging(global::System.String value);
        partial void OnChangerChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="archived">Initial value of the Archived property.</param>
        /// <param name="salaryBalance">Initial value of the SalaryBalance property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.Int32 departmentID, global::System.DateTime createDate, global::System.Int32 creatorID, global::System.DateTime changeDate, global::System.Int32 changerID, global::System.Int32 positionID, global::System.Boolean deleted, global::System.Boolean archived, global::System.Decimal salaryBalance)
        {
            Employee employee = new Employee();
            employee.ID = id;
            employee.DepartmentID = departmentID;
            employee.CreateDate = createDate;
            employee.CreatorID = creatorID;
            employee.ChangeDate = changeDate;
            employee.ChangerID = changerID;
            employee.PositionID = positionID;
            employee.Deleted = deleted;
            employee.Archived = archived;
            employee.SalaryBalance = salaryBalance;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.Boolean _Archived;
        partial void OnArchivedChanging(global::System.Boolean value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportSerie
        {
            get
            {
                return _PassportSerie;
            }
            set
            {
                OnPassportSerieChanging(value);
                ReportPropertyChanging("PassportSerie");
                _PassportSerie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportSerie");
                OnPassportSerieChanged();
            }
        }
        private global::System.String _PassportSerie;
        partial void OnPassportSerieChanging(global::System.String value);
        partial void OnPassportSerieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportIssuer
        {
            get
            {
                return _PassportIssuer;
            }
            set
            {
                OnPassportIssuerChanging(value);
                ReportPropertyChanging("PassportIssuer");
                _PassportIssuer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportIssuer");
                OnPassportIssuerChanged();
            }
        }
        private global::System.String _PassportIssuer;
        partial void OnPassportIssuerChanging(global::System.String value);
        partial void OnPassportIssuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportIssueDate
        {
            get
            {
                return _PassportIssueDate;
            }
            set
            {
                OnPassportIssueDateChanging(value);
                ReportPropertyChanging("PassportIssueDate");
                _PassportIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportIssueDate");
                OnPassportIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportIssueDate;
        partial void OnPassportIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressRegistration
        {
            get
            {
                return _AddressRegistration;
            }
            set
            {
                OnAddressRegistrationChanging(value);
                ReportPropertyChanging("AddressRegistration");
                _AddressRegistration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressRegistration");
                OnAddressRegistrationChanged();
            }
        }
        private global::System.String _AddressRegistration;
        partial void OnAddressRegistrationChanging(global::System.String value);
        partial void OnAddressRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLive
        {
            get
            {
                return _AddressLive;
            }
            set
            {
                OnAddressLiveChanging(value);
                ReportPropertyChanging("AddressLive");
                _AddressLive = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLive");
                OnAddressLiveChanged();
            }
        }
        private global::System.String _AddressLive;
        partial void OnAddressLiveChanging(global::System.String value);
        partial void OnAddressLiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WalletID
        {
            get
            {
                return _WalletID;
            }
            set
            {
                OnWalletIDChanging(value);
                ReportPropertyChanging("WalletID");
                _WalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletID");
                OnWalletIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WalletID;
        partial void OnWalletIDChanging(Nullable<global::System.Int32> value);
        partial void OnWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SalaryBalance
        {
            get
            {
                return _SalaryBalance;
            }
            set
            {
                OnSalaryBalanceChanging(value);
                ReportPropertyChanging("SalaryBalance");
                _SalaryBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalaryBalance");
                OnSalaryBalanceChanged();
            }
        }
        private global::System.Decimal _SalaryBalance;
        partial void OnSalaryBalanceChanging(global::System.Decimal value);
        partial void OnSalaryBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PictureID
        {
            get
            {
                return _PictureID;
            }
            set
            {
                OnPictureIDChanging(value);
                ReportPropertyChanging("PictureID");
                _PictureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureID");
                OnPictureIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PictureID;
        partial void OnPictureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPictureIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Departments", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Employees_Departments", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Employees_Departments", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Employees_Departments", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("BuildingModel.FK_Employees_Departments", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Employees_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Employees_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Positions", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("BuildingModel.FK_Employees_Positions", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("BuildingModel.FK_Employees_Positions", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("BuildingModel.FK_Employees_Positions", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("BuildingModel.FK_Employees_Positions", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Employees_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Employees_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Employees", "ExpensePrice")]
        public EntityCollection<ExpensePrice> ExpensePrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Employees", "ExpensePrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Employees", "ExpensePrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Employees", "Expense")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Employees", "Expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Employees", "Expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Salaries_Employees", "Salary")]
        public EntityCollection<Salary> Salaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Salary>("BuildingModel.FK_Salaries_Employees", "Salary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Salary>("BuildingModel.FK_Salaries_Employees", "Salary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Employees", "WorkLog")]
        public EntityCollection<WorkLog> WorkLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Employees", "WorkLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Employees", "WorkLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Wallets", "Wallet")]
        public Wallet Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Employees_Wallets", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Employees_Wallets", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Employees_Wallets", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_Employees_Wallets", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Employees", "Wallet")]
        public EntityCollection<Wallet> Wallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Employees", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Employees", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Employees", "EmployeeWallet")]
        public EntityCollection<EmployeeWallet> EmployeeWallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Employees", "EmployeeWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Employees", "EmployeeWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Employees", "ProjectEmployee")]
        public EntityCollection<ProjectEmployee> ProjectEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Employees", "ProjectEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Employees", "ProjectEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Employees", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Employees", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Employees", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payrolls_Employees", "Payroll")]
        public EntityCollection<Payroll> Payrolls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payroll>("BuildingModel.FK_Payrolls_Employees", "Payroll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payroll>("BuildingModel.FK_Payrolls_Employees", "Payroll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Employees_SalaryEmployeeID", "Expense")]
        public EntityCollection<Expense> SalaryExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Files_PictureID", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_Employees_Files_PictureID", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_Employees_Files_PictureID", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_Employees_Files_PictureID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("BuildingModel.FK_Employees_Files_PictureID", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Employees", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Employees", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Employees", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="EmployeeWallet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeWallet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeWallet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="walletID">Initial value of the WalletID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="expense">Initial value of the Expense property.</param>
        /// <param name="transferFrom">Initial value of the TransferFrom property.</param>
        /// <param name="transferTo">Initial value of the TransferTo property.</param>
        public static EmployeeWallet CreateEmployeeWallet(global::System.Int32 id, global::System.Int32 employeeID, global::System.Int32 walletID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Boolean expense, global::System.Boolean transferFrom, global::System.Boolean transferTo)
        {
            EmployeeWallet employeeWallet = new EmployeeWallet();
            employeeWallet.ID = id;
            employeeWallet.EmployeeID = employeeID;
            employeeWallet.WalletID = walletID;
            employeeWallet.CreateDate = createDate;
            employeeWallet.ChangeDate = changeDate;
            employeeWallet.CreatorID = creatorID;
            employeeWallet.ChangerID = changerID;
            employeeWallet.Expense = expense;
            employeeWallet.TransferFrom = transferFrom;
            employeeWallet.TransferTo = transferTo;
            return employeeWallet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WalletID
        {
            get
            {
                return _WalletID;
            }
            set
            {
                OnWalletIDChanging(value);
                ReportPropertyChanging("WalletID");
                _WalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletID");
                OnWalletIDChanged();
            }
        }
        private global::System.Int32 _WalletID;
        partial void OnWalletIDChanging(global::System.Int32 value);
        partial void OnWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Expense
        {
            get
            {
                return _Expense;
            }
            set
            {
                OnExpenseChanging(value);
                ReportPropertyChanging("Expense");
                _Expense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expense");
                OnExpenseChanged();
            }
        }
        private global::System.Boolean _Expense;
        partial void OnExpenseChanging(global::System.Boolean value);
        partial void OnExpenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TransferFrom
        {
            get
            {
                return _TransferFrom;
            }
            set
            {
                OnTransferFromChanging(value);
                ReportPropertyChanging("TransferFrom");
                _TransferFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferFrom");
                OnTransferFromChanged();
            }
        }
        private global::System.Boolean _TransferFrom;
        partial void OnTransferFromChanging(global::System.Boolean value);
        partial void OnTransferFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TransferTo
        {
            get
            {
                return _TransferTo;
            }
            set
            {
                OnTransferToChanging(value);
                ReportPropertyChanging("TransferTo");
                _TransferTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferTo");
                OnTransferToChanged();
            }
        }
        private global::System.Boolean _TransferTo;
        partial void OnTransferToChanging(global::System.Boolean value);
        partial void OnTransferToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_EmployeeWallets_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_EmployeeWallets_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_EmployeeWallets_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_EmployeeWallets_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Wallets", "Wallet")]
        public Wallet Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_EmployeeWallets_Wallets", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_EmployeeWallets_Wallets", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_EmployeeWallets_Wallets", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_EmployeeWallets_Wallets", "Wallet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Expense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Expense : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Expense object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="sum">Initial value of the Sum property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="periodSum">Initial value of the PeriodSum property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="walletID">Initial value of the WalletID property.</param>
        public static Expense CreateExpense(global::System.Int32 id, global::System.Int32 typeID, global::System.Decimal sum, global::System.DateTime date, global::System.DateTime createDate, global::System.Int32 creatorID, global::System.DateTime changeDate, global::System.Int32 changerID, global::System.Decimal periodSum, global::System.Decimal price, global::System.Decimal count, global::System.Int32 walletID)
        {
            Expense expense = new Expense();
            expense.ID = id;
            expense.TypeID = typeID;
            expense.Sum = sum;
            expense.Date = date;
            expense.CreateDate = createDate;
            expense.CreatorID = creatorID;
            expense.ChangeDate = changeDate;
            expense.ChangerID = changerID;
            expense.PeriodSum = periodSum;
            expense.Price = price;
            expense.Count = count;
            expense.WalletID = walletID;
            return expense;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Decimal _Sum;
        partial void OnSumChanging(global::System.Decimal value);
        partial void OnSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PeriodSum
        {
            get
            {
                return _PeriodSum;
            }
            set
            {
                OnPeriodSumChanging(value);
                ReportPropertyChanging("PeriodSum");
                _PeriodSum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodSum");
                OnPeriodSumChanged();
            }
        }
        private global::System.Decimal _PeriodSum;
        partial void OnPeriodSumChanging(global::System.Decimal value);
        partial void OnPeriodSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Decimal _Count;
        partial void OnCountChanging(global::System.Decimal value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WalletID
        {
            get
            {
                return _WalletID;
            }
            set
            {
                OnWalletIDChanging(value);
                ReportPropertyChanging("WalletID");
                _WalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletID");
                OnWalletIDChanged();
            }
        }
        private global::System.Int32 _WalletID;
        partial void OnWalletIDChanging(global::System.Int32 value);
        partial void OnWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalaryEmployeeID
        {
            get
            {
                return _SalaryEmployeeID;
            }
            set
            {
                OnSalaryEmployeeIDChanging(value);
                ReportPropertyChanging("SalaryEmployeeID");
                _SalaryEmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalaryEmployeeID");
                OnSalaryEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SalaryEmployeeID;
        partial void OnSalaryEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnSalaryEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DispatchID
        {
            get
            {
                return _DispatchID;
            }
            set
            {
                OnDispatchIDChanging(value);
                ReportPropertyChanging("DispatchID");
                _DispatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DispatchID");
                OnDispatchIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DispatchID;
        partial void OnDispatchIDChanging(Nullable<global::System.Int32> value);
        partial void OnDispatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OuterID
        {
            get
            {
                return _OuterID;
            }
            set
            {
                OnOuterIDChanging(value);
                ReportPropertyChanging("OuterID");
                _OuterID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OuterID");
                OnOuterIDChanged();
            }
        }
        private global::System.String _OuterID;
        partial void OnOuterIDChanging(global::System.String value);
        partial void OnOuterIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_ExpenseTypes", "ExpenseType")]
        public ExpenseType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_Expenses_ExpenseTypes", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_Expenses_ExpenseTypes", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_Expenses_ExpenseTypes", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("BuildingModel.FK_Expenses_ExpenseTypes", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Expenses_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Expenses_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Expenses_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Expenses", "Expense1")]
        public EntityCollection<Expense> ChildExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Expenses", "Expense")]
        public Expense ParentExpense
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Expense> ParentExpenseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Expense>("BuildingModel.FK_Expenses_Expenses", "Expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Expenses_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Expenses_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Expenses_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Expenses_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Wallets", "Wallet")]
        public Wallet Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Expenses_Wallets", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Expenses_Wallets", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Expenses_Wallets", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_Expenses_Wallets", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Employees_SalaryEmployeeID", "Employee")]
        public Employee SalaryEmployee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> SalaryEmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Expenses_Employees_SalaryEmployeeID", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ExpenseCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="readOnly">Initial value of the ReadOnly property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        public static ExpenseCategory CreateExpenseCategory(global::System.Int32 id, global::System.String name, global::System.Boolean readOnly, global::System.Int32 companyID, global::System.Boolean deleted, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate)
        {
            ExpenseCategory expenseCategory = new ExpenseCategory();
            expenseCategory.ID = id;
            expenseCategory.Name = name;
            expenseCategory.ReadOnly = readOnly;
            expenseCategory.CompanyID = companyID;
            expenseCategory.Deleted = deleted;
            expenseCategory.CreatorID = creatorID;
            expenseCategory.ChangerID = changerID;
            expenseCategory.CreateDate = createDate;
            expenseCategory.ChangeDate = changeDate;
            return expenseCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReadOnly
        {
            get
            {
                return _ReadOnly;
            }
            set
            {
                OnReadOnlyChanging(value);
                ReportPropertyChanging("ReadOnly");
                _ReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadOnly");
                OnReadOnlyChanged();
            }
        }
        private global::System.Boolean _ReadOnly;
        partial void OnReadOnlyChanging(global::System.Boolean value);
        partial void OnReadOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseCategories_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseCategories_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_ExpenseCategories", "ExpenseType")]
        public EntityCollection<ExpenseType> ExpenseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ExpensePeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpensePeriod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpensePeriod object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static ExpensePeriod CreateExpensePeriod(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 count, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 orderNumber, global::System.Int32 companyID)
        {
            ExpensePeriod expensePeriod = new ExpensePeriod();
            expensePeriod.ID = id;
            expensePeriod.Name = name;
            expensePeriod.Deleted = deleted;
            expensePeriod.Count = count;
            expensePeriod.CreateDate = createDate;
            expensePeriod.ChangeDate = changeDate;
            expensePeriod.CreatorID = creatorID;
            expensePeriod.ChangerID = changerID;
            expensePeriod.OrderNumber = orderNumber;
            expensePeriod.CompanyID = companyID;
            return expensePeriod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePeriods_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePeriods_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_ExpensePeriods", "ExpenseType")]
        public EntityCollection<ExpenseType> ExpenseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpenseType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ExpensePrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpensePrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpensePrice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="expenseTypeID">Initial value of the ExpenseTypeID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        public static ExpensePrice CreateExpensePrice(global::System.Int32 id, global::System.Int32 employeeID, global::System.Int32 expenseTypeID, global::System.Decimal value, global::System.Int32 creatorID, global::System.DateTime createDate, global::System.Int32 changerID, global::System.DateTime changeDate)
        {
            ExpensePrice expensePrice = new ExpensePrice();
            expensePrice.ID = id;
            expensePrice.EmployeeID = employeeID;
            expensePrice.ExpenseTypeID = expenseTypeID;
            expensePrice.Value = value;
            expensePrice.CreatorID = creatorID;
            expensePrice.CreateDate = createDate;
            expensePrice.ChangerID = changerID;
            expensePrice.ChangeDate = changeDate;
            return expensePrice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeID
        {
            get
            {
                return _ExpenseTypeID;
            }
            set
            {
                OnExpenseTypeIDChanging(value);
                ReportPropertyChanging("ExpenseTypeID");
                _ExpenseTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTypeID");
                OnExpenseTypeIDChanged();
            }
        }
        private global::System.Int32 _ExpenseTypeID;
        partial void OnExpenseTypeIDChanging(global::System.Int32 value);
        partial void OnExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ExpensePrices_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ExpensePrices_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ExpensePrices_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_ExpensePrices_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_ExpenseTypes", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ExpenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="forBalance">Initial value of the ForBalance property.</param>
        /// <param name="managerFee">Initial value of the ManagerFee property.</param>
        /// <param name="forSalary">Initial value of the ForSalary property.</param>
        public static ExpenseType CreateExpenseType(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 orderNumber, global::System.Decimal price, global::System.Boolean forBalance, global::System.Boolean managerFee, global::System.Boolean forSalary)
        {
            ExpenseType expenseType = new ExpenseType();
            expenseType.ID = id;
            expenseType.Name = name;
            expenseType.Deleted = deleted;
            expenseType.OrderNumber = orderNumber;
            expenseType.Price = price;
            expenseType.ForBalance = forBalance;
            expenseType.ManagerFee = managerFee;
            expenseType.ForSalary = forSalary;
            return expenseType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PeriodID
        {
            get
            {
                return _PeriodID;
            }
            set
            {
                OnPeriodIDChanging(value);
                ReportPropertyChanging("PeriodID");
                _PeriodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodID");
                OnPeriodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PeriodID;
        partial void OnPeriodIDChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForBalance
        {
            get
            {
                return _ForBalance;
            }
            set
            {
                OnForBalanceChanging(value);
                ReportPropertyChanging("ForBalance");
                _ForBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForBalance");
                OnForBalanceChanged();
            }
        }
        private global::System.Boolean _ForBalance;
        partial void OnForBalanceChanging(global::System.Boolean value);
        partial void OnForBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultWalletID
        {
            get
            {
                return _DefaultWalletID;
            }
            set
            {
                OnDefaultWalletIDChanging(value);
                ReportPropertyChanging("DefaultWalletID");
                _DefaultWalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultWalletID");
                OnDefaultWalletIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultWalletID;
        partial void OnDefaultWalletIDChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WalletEditable
        {
            get
            {
                return _WalletEditable;
            }
            set
            {
                OnWalletEditableChanging(value);
                ReportPropertyChanging("WalletEditable");
                _WalletEditable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletEditable");
                OnWalletEditableChanged();
            }
        }
        private Nullable<global::System.Boolean> _WalletEditable;
        partial void OnWalletEditableChanging(Nullable<global::System.Boolean> value);
        partial void OnWalletEditableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ManagerFee
        {
            get
            {
                return _ManagerFee;
            }
            set
            {
                OnManagerFeeChanging(value);
                ReportPropertyChanging("ManagerFee");
                _ManagerFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerFee");
                OnManagerFeeChanged();
            }
        }
        private global::System.Boolean _ManagerFee;
        partial void OnManagerFeeChanging(global::System.Boolean value);
        partial void OnManagerFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForSalary
        {
            get
            {
                return _ForSalary;
            }
            set
            {
                OnForSalaryChanging(value);
                ReportPropertyChanging("ForSalary");
                _ForSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForSalary");
                OnForSalaryChanged();
            }
        }
        private global::System.Boolean _ForSalary;
        partial void OnForSalaryChanging(global::System.Boolean value);
        partial void OnForSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_ExpenseTypes", "Expens")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_ExpenseTypes", "Expens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_ExpenseTypes", "Expens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod")]
        public ExpensePeriod Period
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpensePeriod>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpensePeriod>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpensePeriod> PeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpensePeriod>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpensePeriod>("BuildingModel.FK_ExpenseTypes_ExpensePeriods", "ExpensePeriod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_ExpenseTypes", "ExpensePrice")]
        public EntityCollection<ExpensePrice> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpensePrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_ExpenseTypes", "ExpensePrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory")]
        public ExpenseCategory Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseCategory> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseCategory>("BuildingModel.FK_ExpenseTypes_ExpenseCategories", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_Wallets", "Wallet")]
        public Wallet Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_ExpenseTypes_Wallets", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_ExpenseTypes_Wallets", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_ExpenseTypes_Wallets", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_ExpenseTypes_Wallets", "Wallet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        public static File CreateFile(global::System.Int32 id, global::System.String name, global::System.String url, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID)
        {
            File file = new File();
            file.ID = id;
            file.Name = name;
            file.Url = url;
            file.CreateDate = createDate;
            file.ChangeDate = changeDate;
            file.CreatorID = creatorID;
            file.ChangerID = changerID;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FolderID
        {
            get
            {
                return _FolderID;
            }
            set
            {
                OnFolderIDChanging(value);
                ReportPropertyChanging("FolderID");
                _FolderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderID");
                OnFolderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FolderID;
        partial void OnFolderIDChanging(Nullable<global::System.Int32> value);
        partial void OnFolderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Files_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Files_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Files_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_Files", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_Files", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_Files", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorFiles_Files", "ContractorFile")]
        public EntityCollection<ContractorFile> ContractorFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorFile>("BuildingModel.FK_ContractorFiles_Files", "ContractorFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorFile>("BuildingModel.FK_ContractorFiles_Files", "ContractorFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Files_PictureID", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Files_PictureID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Files_PictureID", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Folders", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Files_Folders", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Files_Folders", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Files_Folders", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("BuildingModel.FK_Files_Folders", "Folder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static Folder CreateFolder(global::System.Int32 id, global::System.String name, global::System.String url, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 level)
        {
            Folder folder = new Folder();
            folder.ID = id;
            folder.Name = name;
            folder.Url = url;
            folder.CreateDate = createDate;
            folder.ChangeDate = changeDate;
            folder.CreatorID = creatorID;
            folder.ChangerID = changerID;
            folder.Level = level;
            return folder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreeString
        {
            get
            {
                return _TreeString;
            }
            set
            {
                OnTreeStringChanging(value);
                ReportPropertyChanging("TreeString");
                _TreeString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TreeString");
                OnTreeStringChanged();
            }
        }
        private global::System.String _TreeString;
        partial void OnTreeStringChanging(global::System.String value);
        partial void OnTreeStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Folders", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("BuildingModel.FK_Files_Folders", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("BuildingModel.FK_Files_Folders", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Folders_Folders_ParentID", "Folder1")]
        public EntityCollection<Folder> ChildFolders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Folders_Folders_ParentID", "Folder")]
        public Folder ParentFolder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> ParentFolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("BuildingModel.FK_Folders_Folders_ParentID", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Folders_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Folders_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Folders_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Folders_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Folders_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="IdentityNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentityNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdentityNumber object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static IdentityNumber CreateIdentityNumber(global::System.Int32 id, global::System.String name, global::System.Int32 number)
        {
            IdentityNumber identityNumber = new IdentityNumber();
            identityNumber.ID = id;
            identityNumber.Name = name;
            identityNumber.Number = number;
            return identityNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Incident")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Incident : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Incident object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="visible">Initial value of the Visible property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="remind">Initial value of the Remind property.</param>
        /// <param name="repeat">Initial value of the Repeat property.</param>
        public static Incident CreateIncident(global::System.Int32 id, global::System.Int32 typeID, global::System.DateTime date, global::System.String name, global::System.Boolean visible, global::System.Int32 creatorID, global::System.Int32 companyID, global::System.Boolean remind, global::System.Boolean repeat)
        {
            Incident incident = new Incident();
            incident.ID = id;
            incident.TypeID = typeID;
            incident.Date = date;
            incident.Name = name;
            incident.Visible = visible;
            incident.CreatorID = creatorID;
            incident.CompanyID = companyID;
            incident.Remind = remind;
            incident.Repeat = repeat;
            return incident;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ForUserID
        {
            get
            {
                return _ForUserID;
            }
            set
            {
                OnForUserIDChanging(value);
                ReportPropertyChanging("ForUserID");
                _ForUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForUserID");
                OnForUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ForUserID;
        partial void OnForUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnForUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ForRoleID
        {
            get
            {
                return _ForRoleID;
            }
            set
            {
                OnForRoleIDChanging(value);
                ReportPropertyChanging("ForRoleID");
                _ForRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForRoleID");
                OnForRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ForRoleID;
        partial void OnForRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnForRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Remind
        {
            get
            {
                return _Remind;
            }
            set
            {
                OnRemindChanging(value);
                ReportPropertyChanging("Remind");
                _Remind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Remind");
                OnRemindChanged();
            }
        }
        private global::System.Boolean _Remind;
        partial void OnRemindChanging(global::System.Boolean value);
        partial void OnRemindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RemindDate
        {
            get
            {
                return _RemindDate;
            }
            set
            {
                OnRemindDateChanging(value);
                ReportPropertyChanging("RemindDate");
                _RemindDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemindDate");
                OnRemindDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RemindDate;
        partial void OnRemindDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRemindDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryID
        {
            get
            {
                return _PrimaryID;
            }
            set
            {
                OnPrimaryIDChanging(value);
                ReportPropertyChanging("PrimaryID");
                _PrimaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryID");
                OnPrimaryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryID;
        partial void OnPrimaryIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Repeat
        {
            get
            {
                return _Repeat;
            }
            set
            {
                OnRepeatChanging(value);
                ReportPropertyChanging("Repeat");
                _Repeat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Repeat");
                OnRepeatChanged();
            }
        }
        private global::System.Boolean _Repeat;
        partial void OnRepeatChanging(global::System.Boolean value);
        partial void OnRepeatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatTypeID
        {
            get
            {
                return _RepeatTypeID;
            }
            set
            {
                OnRepeatTypeIDChanging(value);
                ReportPropertyChanging("RepeatTypeID");
                _RepeatTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepeatTypeID");
                OnRepeatTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatTypeID;
        partial void OnRepeatTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryID
        {
            get
            {
                return _SecondaryID;
            }
            set
            {
                OnSecondaryIDChanging(value);
                ReportPropertyChanging("SecondaryID");
                _SecondaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryID");
                OnSecondaryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryID;
        partial void OnSecondaryIDChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_IncidentTypes", "IncidentType")]
        public IncidentType IncidentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("BuildingModel.FK_Incidents_IncidentTypes", "IncidentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("BuildingModel.FK_Incidents_IncidentTypes", "IncidentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IncidentType> IncidentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IncidentType>("BuildingModel.FK_Incidents_IncidentTypes", "IncidentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IncidentType>("BuildingModel.FK_Incidents_IncidentTypes", "IncidentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Roles", "Role")]
        public Role ForRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Incidents_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Incidents_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> ForRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Incidents_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BuildingModel.FK_Incidents_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Users_CreatorID", "User")]
        public User Creator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Incidents_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Users_ForUserID", "User")]
        public User ForUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_ForUserID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_ForUserID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ForUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Incidents_Users_ForUserID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Incidents_Users_ForUserID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Incidents", "IncidentUser")]
        public EntityCollection<IncidentUser> IncidentUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Incidents", "IncidentUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Incidents", "IncidentUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_RepeatIntervals", "RepeatInterval")]
        public RepeatInterval RepeatType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepeatInterval>("BuildingModel.FK_Incidents_RepeatIntervals", "RepeatInterval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepeatInterval>("BuildingModel.FK_Incidents_RepeatIntervals", "RepeatInterval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RepeatInterval> RepeatTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepeatInterval>("BuildingModel.FK_Incidents_RepeatIntervals", "RepeatInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RepeatInterval>("BuildingModel.FK_Incidents_RepeatIntervals", "RepeatInterval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "Incident_IncidentSecondaryID", "Incident1")]
        public EntityCollection<Incident> PrimaryIncidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "Incident_IncidentSecondaryID", "Incident")]
        public Incident SecondaryIncident
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Incident> SecondaryIncidentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Incident>("BuildingModel.Incident_IncidentSecondaryID", "Incident", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="IncidentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncidentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncidentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="backgroundColor">Initial value of the BackgroundColor property.</param>
        /// <param name="importance">Initial value of the Importance property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static IncidentType CreateIncidentType(global::System.Int32 id, global::System.String name, global::System.String color, global::System.String backgroundColor, global::System.Int32 importance, global::System.Int32 companyID, global::System.Boolean deleted, global::System.Int32 orderNumber)
        {
            IncidentType incidentType = new IncidentType();
            incidentType.ID = id;
            incidentType.Name = name;
            incidentType.Color = color;
            incidentType.BackgroundColor = backgroundColor;
            incidentType.Importance = importance;
            incidentType.CompanyID = companyID;
            incidentType.Deleted = deleted;
            incidentType.OrderNumber = orderNumber;
            return incidentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackgroundColor
        {
            get
            {
                return _BackgroundColor;
            }
            set
            {
                OnBackgroundColorChanging(value);
                ReportPropertyChanging("BackgroundColor");
                _BackgroundColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackgroundColor");
                OnBackgroundColorChanged();
            }
        }
        private global::System.String _BackgroundColor;
        partial void OnBackgroundColorChanging(global::System.String value);
        partial void OnBackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Importance
        {
            get
            {
                return _Importance;
            }
            set
            {
                OnImportanceChanging(value);
                ReportPropertyChanging("Importance");
                _Importance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Importance");
                OnImportanceChanged();
            }
        }
        private global::System.Int32 _Importance;
        partial void OnImportanceChanging(global::System.Int32 value);
        partial void OnImportanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_IncidentTypes", "Incident")]
        public EntityCollection<Incident> Incidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.FK_Incidents_IncidentTypes", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.FK_Incidents_IncidentTypes", "Incident", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="IncidentUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IncidentUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IncidentUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="incidentID">Initial value of the IncidentID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="done">Initial value of the Done property.</param>
        /// <param name="custom">Initial value of the Custom property.</param>
        public static IncidentUser CreateIncidentUser(global::System.Int32 id, global::System.Int32 incidentID, global::System.Int32 userID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Boolean done, global::System.Boolean custom)
        {
            IncidentUser incidentUser = new IncidentUser();
            incidentUser.ID = id;
            incidentUser.IncidentID = incidentID;
            incidentUser.UserID = userID;
            incidentUser.CreateDate = createDate;
            incidentUser.ChangeDate = changeDate;
            incidentUser.CreatorID = creatorID;
            incidentUser.ChangerID = changerID;
            incidentUser.Done = done;
            incidentUser.Custom = custom;
            return incidentUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IncidentID
        {
            get
            {
                return _IncidentID;
            }
            set
            {
                OnIncidentIDChanging(value);
                ReportPropertyChanging("IncidentID");
                _IncidentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncidentID");
                OnIncidentIDChanged();
            }
        }
        private global::System.Int32 _IncidentID;
        partial void OnIncidentIDChanging(global::System.Int32 value);
        partial void OnIncidentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Done
        {
            get
            {
                return _Done;
            }
            set
            {
                OnDoneChanging(value);
                ReportPropertyChanging("Done");
                _Done = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Done");
                OnDoneChanged();
            }
        }
        private global::System.Boolean _Done;
        partial void OnDoneChanging(global::System.Boolean value);
        partial void OnDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Custom
        {
            get
            {
                return _Custom;
            }
            set
            {
                OnCustomChanging(value);
                ReportPropertyChanging("Custom");
                _Custom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Custom");
                OnCustomChanged();
            }
        }
        private global::System.Boolean _Custom;
        partial void OnCustomChanging(global::System.Boolean value);
        partial void OnCustomChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Incidents", "Incident")]
        public Incident Incident
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.FK_IncidentUsers_Incidents", "Incident").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.FK_IncidentUsers_Incidents", "Incident").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Incident> IncidentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Incident>("BuildingModel.FK_IncidentUsers_Incidents", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Incident>("BuildingModel.FK_IncidentUsers_Incidents", "Incident", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users_ChangerID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users_CreatorID", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="InformationSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InformationSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InformationSource object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="needDescription">Initial value of the NeedDescription property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static InformationSource CreateInformationSource(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Boolean needDescription, global::System.Int32 orderNumber)
        {
            InformationSource informationSource = new InformationSource();
            informationSource.ID = id;
            informationSource.Name = name;
            informationSource.Deleted = deleted;
            informationSource.NeedDescription = needDescription;
            informationSource.OrderNumber = orderNumber;
            return informationSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedDescription
        {
            get
            {
                return _NeedDescription;
            }
            set
            {
                OnNeedDescriptionChanging(value);
                ReportPropertyChanging("NeedDescription");
                _NeedDescription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedDescription");
                OnNeedDescriptionChanged();
            }
        }
        private global::System.Boolean _NeedDescription;
        partial void OnNeedDescriptionChanging(global::System.Boolean value);
        partial void OnNeedDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionCaption
        {
            get
            {
                return _DescriptionCaption;
            }
            set
            {
                OnDescriptionCaptionChanging(value);
                ReportPropertyChanging("DescriptionCaption");
                _DescriptionCaption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionCaption");
                OnDescriptionCaptionChanged();
            }
        }
        private global::System.String _DescriptionCaption;
        partial void OnDescriptionCaptionChanging(global::System.String value);
        partial void OnDescriptionCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_InformationSources", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_InformationSources", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_InformationSources", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_InformationSources_InformationSources_ParentID", "InformationSource1")]
        public EntityCollection<InformationSource> InformationSources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_InformationSources_InformationSources_ParentID", "InformationSource")]
        public InformationSource InformationSource1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InformationSource> InformationSource1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InformationSource>("BuildingModel.FK_InformationSources_InformationSources_ParentID", "InformationSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="nulled">Initial value of the Nulled property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Invoice CreateInvoice(global::System.Int32 id, global::System.String number, global::System.Boolean nulled, global::System.DateTime createDate, global::System.String creator, global::System.Decimal amount)
        {
            Invoice invoice = new Invoice();
            invoice.ID = id;
            invoice.Number = number;
            invoice.Nulled = nulled;
            invoice.CreateDate = createDate;
            invoice.Creator = creator;
            invoice.Amount = amount;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Nulled
        {
            get
            {
                return _Nulled;
            }
            set
            {
                OnNulledChanging(value);
                ReportPropertyChanging("Nulled");
                _Nulled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Nulled");
                OnNulledChanged();
            }
        }
        private global::System.Boolean _Nulled;
        partial void OnNulledChanging(global::System.Boolean value);
        partial void OnNulledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DrawnDate
        {
            get
            {
                return _DrawnDate;
            }
            set
            {
                OnDrawnDateChanging(value);
                ReportPropertyChanging("DrawnDate");
                _DrawnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrawnDate");
                OnDrawnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DrawnDate;
        partial void OnDrawnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDrawnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Changer
        {
            get
            {
                return _Changer;
            }
            set
            {
                OnChangerChanging(value);
                ReportPropertyChanging("Changer");
                _Changer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Changer");
                OnChangerChanged();
            }
        }
        private global::System.String _Changer;
        partial void OnChangerChanging(global::System.String value);
        partial void OnChangerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Invoices_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Invoices_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Invoices_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Invoices_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Invoices_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Invoices", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Invoices", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Invoices", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Invoices", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Invoices", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Invoices", "ProjectTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="LegalDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="contractorID">Initial value of the ContractorID property.</param>
        public static LegalDetail CreateLegalDetail(global::System.Int32 id, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 contractorID)
        {
            LegalDetail legalDetail = new LegalDetail();
            legalDetail.ID = id;
            legalDetail.CreateDate = createDate;
            legalDetail.ChangeDate = changeDate;
            legalDetail.CreatorID = creatorID;
            legalDetail.ChangerID = changerID;
            legalDetail.ContractorID = contractorID;
            return legalDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private global::System.Int32 _ContractorID;
        partial void OnContractorIDChanging(global::System.Int32 value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Boss
        {
            get
            {
                return _Boss;
            }
            set
            {
                OnBossChanging(value);
                ReportPropertyChanging("Boss");
                _Boss = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Boss");
                OnBossChanged();
            }
        }
        private global::System.String _Boss;
        partial void OnBossChanging(global::System.String value);
        partial void OnBossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Certificate
        {
            get
            {
                return _Certificate;
            }
            set
            {
                OnCertificateChanging(value);
                ReportPropertyChanging("Certificate");
                _Certificate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Certificate");
                OnCertificateChanged();
            }
        }
        private global::System.String _Certificate;
        partial void OnCertificateChanging(global::System.String value);
        partial void OnCertificateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Accountant
        {
            get
            {
                return _Accountant;
            }
            set
            {
                OnAccountantChanging(value);
                ReportPropertyChanging("Accountant");
                _Accountant = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Accountant");
                OnAccountantChanged();
            }
        }
        private global::System.String _Accountant;
        partial void OnAccountantChanging(global::System.String value);
        partial void OnAccountantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalAddress
        {
            get
            {
                return _LegalAddress;
            }
            set
            {
                OnLegalAddressChanging(value);
                ReportPropertyChanging("LegalAddress");
                _LegalAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LegalAddress");
                OnLegalAddressChanged();
            }
        }
        private global::System.String _LegalAddress;
        partial void OnLegalAddressChanging(global::System.String value);
        partial void OnLegalAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RealAddress
        {
            get
            {
                return _RealAddress;
            }
            set
            {
                OnRealAddressChanging(value);
                ReportPropertyChanging("RealAddress");
                _RealAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RealAddress");
                OnRealAddressChanged();
            }
        }
        private global::System.String _RealAddress;
        partial void OnRealAddressChanging(global::System.String value);
        partial void OnRealAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ogrn
        {
            get
            {
                return _Ogrn;
            }
            set
            {
                OnOgrnChanging(value);
                ReportPropertyChanging("Ogrn");
                _Ogrn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ogrn");
                OnOgrnChanged();
            }
        }
        private global::System.String _Ogrn;
        partial void OnOgrnChanging(global::System.String value);
        partial void OnOgrnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inn
        {
            get
            {
                return _Inn;
            }
            set
            {
                OnInnChanging(value);
                ReportPropertyChanging("Inn");
                _Inn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inn");
                OnInnChanged();
            }
        }
        private global::System.String _Inn;
        partial void OnInnChanging(global::System.String value);
        partial void OnInnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kpp
        {
            get
            {
                return _Kpp;
            }
            set
            {
                OnKppChanging(value);
                ReportPropertyChanging("Kpp");
                _Kpp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kpp");
                OnKppChanged();
            }
        }
        private global::System.String _Kpp;
        partial void OnKppChanging(global::System.String value);
        partial void OnKppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccount
        {
            get
            {
                return _BankAccount;
            }
            set
            {
                OnBankAccountChanging(value);
                ReportPropertyChanging("BankAccount");
                _BankAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccount");
                OnBankAccountChanged();
            }
        }
        private global::System.String _BankAccount;
        partial void OnBankAccountChanging(global::System.String value);
        partial void OnBankAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankLoroAccount
        {
            get
            {
                return _BankLoroAccount;
            }
            set
            {
                OnBankLoroAccountChanging(value);
                ReportPropertyChanging("BankLoroAccount");
                _BankLoroAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankLoroAccount");
                OnBankLoroAccountChanged();
            }
        }
        private global::System.String _BankLoroAccount;
        partial void OnBankLoroAccountChanging(global::System.String value);
        partial void OnBankLoroAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankBik
        {
            get
            {
                return _BankBik;
            }
            set
            {
                OnBankBikChanging(value);
                ReportPropertyChanging("BankBik");
                _BankBik = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankBik");
                OnBankBikChanged();
            }
        }
        private global::System.String _BankBik;
        partial void OnBankBikChanging(global::System.String value);
        partial void OnBankBikChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_LegalDetails_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Users_ChangerID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_LegalDetails_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_LegalDetails_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_LegalDetails_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_LegalDetails_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_LegalDetails_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_LegalDetails_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="sum">Initial value of the Sum property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="isAdvance">Initial value of the IsAdvance property.</param>
        /// <param name="walletID">Initial value of the WalletID property.</param>
        public static Payment CreatePayment(global::System.Int32 id, global::System.DateTime date, global::System.Decimal sum, global::System.Int32 projectID, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 roleID, global::System.Boolean isAdvance, global::System.Int32 walletID)
        {
            Payment payment = new Payment();
            payment.ID = id;
            payment.Date = date;
            payment.Sum = sum;
            payment.ProjectID = projectID;
            payment.CreatorID = creatorID;
            payment.ChangerID = changerID;
            payment.CreateDate = createDate;
            payment.ChangeDate = changeDate;
            payment.RoleID = roleID;
            payment.IsAdvance = isAdvance;
            payment.WalletID = walletID;
            return payment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Decimal _Sum;
        partial void OnSumChanging(global::System.Decimal value);
        partial void OnSumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkID
        {
            get
            {
                return _WorkID;
            }
            set
            {
                OnWorkIDChanging(value);
                ReportPropertyChanging("WorkID");
                _WorkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkID");
                OnWorkIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkID;
        partial void OnWorkIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdvance
        {
            get
            {
                return _IsAdvance;
            }
            set
            {
                OnIsAdvanceChanging(value);
                ReportPropertyChanging("IsAdvance");
                _IsAdvance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdvance");
                OnIsAdvanceChanged();
            }
        }
        private global::System.Boolean _IsAdvance;
        partial void OnIsAdvanceChanging(global::System.Boolean value);
        partial void OnIsAdvanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WalletID
        {
            get
            {
                return _WalletID;
            }
            set
            {
                OnWalletIDChanging(value);
                ReportPropertyChanging("WalletID");
                _WalletID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletID");
                OnWalletIDChanged();
            }
        }
        private global::System.Int32 _WalletID;
        partial void OnWalletIDChanging(global::System.Int32 value);
        partial void OnWalletIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_PaymentRoles", "PaymentRoles")]
        public PaymentRole PaymentRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentRole>("BuildingModel.FK_Payments_PaymentRoles", "PaymentRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentRole>("BuildingModel.FK_Payments_PaymentRoles", "PaymentRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentRole> PaymentRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentRole>("BuildingModel.FK_Payments_PaymentRoles", "PaymentRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentRole>("BuildingModel.FK_Payments_PaymentRoles", "PaymentRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payments_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payments_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payments_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Payments_Projects", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_ProjectWorks", "ProjectWorks")]
        public ProjectWork ProjectWork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWork>("BuildingModel.FK_Payments_ProjectWorks", "ProjectWorks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWork>("BuildingModel.FK_Payments_ProjectWorks", "ProjectWorks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectWork> ProjectWorkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWork>("BuildingModel.FK_Payments_ProjectWorks", "ProjectWorks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectWork>("BuildingModel.FK_Payments_ProjectWorks", "ProjectWorks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Payments_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Users_CreatorID", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Payments_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Payments_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Wallets", "Wallet")]
        public Wallet Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Payments_Wallets", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Payments_Wallets", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Payments_Wallets", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_Payments_Wallets", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Payments_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Payments_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Payments_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_Payments_Contractors", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Invoices", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_Payments_Invoices", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_Payments_Invoices", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_Payments_Invoices", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("BuildingModel.FK_Payments_Invoices", "Invoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="PaymentRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static PaymentRole CreatePaymentRole(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            PaymentRole paymentRole = new PaymentRole();
            paymentRole.ID = id;
            paymentRole.Name = name;
            paymentRole.SysName = sysName;
            return paymentRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_PaymentRoles", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_PaymentRoles", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_PaymentRoles", "Payments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Payroll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payroll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payroll object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        public static Payroll CreatePayroll(global::System.Int32 id, global::System.Int32 employeeID, global::System.Decimal amount, global::System.DateTime date, global::System.DateTime createDate, global::System.String creator, global::System.Int32 month)
        {
            Payroll payroll = new Payroll();
            payroll.ID = id;
            payroll.EmployeeID = employeeID;
            payroll.Amount = amount;
            payroll.Date = date;
            payroll.CreateDate = createDate;
            payroll.Creator = creator;
            payroll.Month = month;
            return payroll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Changer
        {
            get
            {
                return _Changer;
            }
            set
            {
                OnChangerChanging(value);
                ReportPropertyChanging("Changer");
                _Changer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Changer");
                OnChangerChanged();
            }
        }
        private global::System.String _Changer;
        partial void OnChangerChanging(global::System.String value);
        partial void OnChangerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payrolls_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Payrolls_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Payrolls_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Payrolls_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Payrolls_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payrolls_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payrolls_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payrolls_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Payrolls_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Payrolls_Projects", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="PhysicalDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="contractorID">Initial value of the ContractorID property.</param>
        public static PhysicalDetail CreatePhysicalDetail(global::System.Int32 id, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 contractorID)
        {
            PhysicalDetail physicalDetail = new PhysicalDetail();
            physicalDetail.ID = id;
            physicalDetail.CreateDate = createDate;
            physicalDetail.ChangeDate = changeDate;
            physicalDetail.CreatorID = creatorID;
            physicalDetail.ChangerID = changerID;
            physicalDetail.ContractorID = contractorID;
            return physicalDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportSerie
        {
            get
            {
                return _PassportSerie;
            }
            set
            {
                OnPassportSerieChanging(value);
                ReportPropertyChanging("PassportSerie");
                _PassportSerie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportSerie");
                OnPassportSerieChanged();
            }
        }
        private global::System.String _PassportSerie;
        partial void OnPassportSerieChanging(global::System.String value);
        partial void OnPassportSerieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportIssuer
        {
            get
            {
                return _PassportIssuer;
            }
            set
            {
                OnPassportIssuerChanging(value);
                ReportPropertyChanging("PassportIssuer");
                _PassportIssuer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportIssuer");
                OnPassportIssuerChanged();
            }
        }
        private global::System.String _PassportIssuer;
        partial void OnPassportIssuerChanging(global::System.String value);
        partial void OnPassportIssuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportSubcode
        {
            get
            {
                return _PassportSubcode;
            }
            set
            {
                OnPassportSubcodeChanging(value);
                ReportPropertyChanging("PassportSubcode");
                _PassportSubcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportSubcode");
                OnPassportSubcodeChanged();
            }
        }
        private global::System.String _PassportSubcode;
        partial void OnPassportSubcodeChanging(global::System.String value);
        partial void OnPassportSubcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PassportIssueDate
        {
            get
            {
                return _PassportIssueDate;
            }
            set
            {
                OnPassportIssueDateChanging(value);
                ReportPropertyChanging("PassportIssueDate");
                _PassportIssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportIssueDate");
                OnPassportIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PassportIssueDate;
        partial void OnPassportIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPassportIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegisterAddress
        {
            get
            {
                return _RegisterAddress;
            }
            set
            {
                OnRegisterAddressChanging(value);
                ReportPropertyChanging("RegisterAddress");
                _RegisterAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegisterAddress");
                OnRegisterAddressChanged();
            }
        }
        private global::System.String _RegisterAddress;
        partial void OnRegisterAddressChanging(global::System.String value);
        partial void OnRegisterAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LiveAddress
        {
            get
            {
                return _LiveAddress;
            }
            set
            {
                OnLiveAddressChanging(value);
                ReportPropertyChanging("LiveAddress");
                _LiveAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LiveAddress");
                OnLiveAddressChanged();
            }
        }
        private global::System.String _LiveAddress;
        partial void OnLiveAddressChanging(global::System.String value);
        partial void OnLiveAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inn
        {
            get
            {
                return _Inn;
            }
            set
            {
                OnInnChanging(value);
                ReportPropertyChanging("Inn");
                _Inn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inn");
                OnInnChanged();
            }
        }
        private global::System.String _Inn;
        partial void OnInnChanging(global::System.String value);
        partial void OnInnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private global::System.Int32 _ContractorID;
        partial void OnContractorIDChanging(global::System.Int32 value);
        partial void OnContractorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_PhysicalDetails_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_PhysicalDetails_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_PhysicalDetails_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_PhysicalDetails_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static Position CreatePosition(global::System.Int32 id, global::System.Int32 departmentID, global::System.Boolean deleted, global::System.Int32 orderNumber)
        {
            Position position = new Position();
            position.ID = id;
            position.DepartmentID = departmentID;
            position.Deleted = deleted;
            position.OrderNumber = orderNumber;
            return position;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Positions_Departments", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Positions_Departments", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Positions_Departments", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BuildingModel.FK_Positions_Departments", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("BuildingModel.FK_Positions_Departments", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Positions", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Positions", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Positions", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="archived">Initial value of the Archived property.</param>
        /// <param name="responsibleID">Initial value of the ResponsibleID property.</param>
        /// <param name="managerFee">Initial value of the ManagerFee property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String name, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Boolean deleted, global::System.Boolean archived, global::System.Int32 responsibleID, global::System.Decimal managerFee)
        {
            Project project = new Project();
            project.ID = id;
            project.Name = name;
            project.CreatorID = creatorID;
            project.ChangerID = changerID;
            project.CreateDate = createDate;
            project.ChangeDate = changeDate;
            project.Deleted = deleted;
            project.Archived = archived;
            project.ResponsibleID = responsibleID;
            project.ManagerFee = managerFee;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.Boolean _Archived;
        partial void OnArchivedChanging(global::System.Boolean value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractID;
        partial void OnContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysEnd
        {
            get
            {
                return _DaysEnd;
            }
            set
            {
                OnDaysEndChanging(value);
                ReportPropertyChanging("DaysEnd");
                _DaysEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysEnd");
                OnDaysEndChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysEnd;
        partial void OnDaysEndChanging(Nullable<global::System.Int32> value);
        partial void OnDaysEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysTypeID
        {
            get
            {
                return _DaysTypeID;
            }
            set
            {
                OnDaysTypeIDChanging(value);
                ReportPropertyChanging("DaysTypeID");
                _DaysTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysTypeID");
                OnDaysTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysTypeID;
        partial void OnDaysTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysFromTypeID
        {
            get
            {
                return _DaysFromTypeID;
            }
            set
            {
                OnDaysFromTypeIDChanging(value);
                ReportPropertyChanging("DaysFromTypeID");
                _DaysFromTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysFromTypeID");
                OnDaysFromTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysFromTypeID;
        partial void OnDaysFromTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysFromTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSign
        {
            get
            {
                return _DateSign;
            }
            set
            {
                OnDateSignChanging(value);
                ReportPropertyChanging("DateSign");
                _DateSign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSign");
                OnDateSignChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSign;
        partial void OnDateSignChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResponsibleID
        {
            get
            {
                return _ResponsibleID;
            }
            set
            {
                OnResponsibleIDChanging(value);
                ReportPropertyChanging("ResponsibleID");
                _ResponsibleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleID");
                OnResponsibleIDChanged();
            }
        }
        private global::System.Int32 _ResponsibleID;
        partial void OnResponsibleIDChanging(global::System.Int32 value);
        partial void OnResponsibleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ManagerFee
        {
            get
            {
                return _ManagerFee;
            }
            set
            {
                OnManagerFeeChanging(value);
                ReportPropertyChanging("ManagerFee");
                _ManagerFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerFee");
                OnManagerFeeChanged();
            }
        }
        private global::System.Decimal _ManagerFee;
        partial void OnManagerFeeChanging(global::System.Decimal value);
        partial void OnManagerFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubcontractorID
        {
            get
            {
                return _SubcontractorID;
            }
            set
            {
                OnSubcontractorIDChanging(value);
                ReportPropertyChanging("SubcontractorID");
                _SubcontractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubcontractorID");
                OnSubcontractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubcontractorID;
        partial void OnSubcontractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubcontractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorContractID
        {
            get
            {
                return _ContractorContractID;
            }
            set
            {
                OnContractorContractIDChanging(value);
                ReportPropertyChanging("ContractorContractID");
                _ContractorContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorContractID");
                OnContractorContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorContractID;
        partial void OnContractorContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorContractPageID
        {
            get
            {
                return _ContractorContractPageID;
            }
            set
            {
                OnContractorContractPageIDChanging(value);
                ReportPropertyChanging("ContractorContractPageID");
                _ContractorContractPageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorContractPageID");
                OnContractorContractPageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorContractPageID;
        partial void OnContractorContractPageIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorContractPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contacts
        {
            get
            {
                return _Contacts;
            }
            set
            {
                OnContactsChanging(value);
                ReportPropertyChanging("Contacts");
                _Contacts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contacts");
                OnContactsChanged();
            }
        }
        private global::System.String _Contacts;
        partial void OnContactsChanging(global::System.String value);
        partial void OnContactsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Projects", "Contracts")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_Projects", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_Projects", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Projects", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Projects", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Projects", "Payments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users_ChangerID", "Users")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Projects_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users_CreatorID", "Users")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Projects_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorkStages_Projects", "ProjectStages")]
        public EntityCollection<ProjectStage> ProjectStages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectStage>("BuildingModel.FK_ProjectWorkStages_Projects", "ProjectStages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectStage>("BuildingModel.FK_ProjectWorkStages_Projects", "ProjectStages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Projects", "ProjectWork")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Projects", "ProjectWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Projects", "ProjectWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contracts", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Projects_Contracts", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Projects_Contracts", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_Projects_Contracts", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("BuildingModel.FK_Projects_Contracts", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_DaysFromTypes", "DaysFromType")]
        public DaysFromType DaysFromType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Projects_DaysFromTypes", "DaysFromType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Projects_DaysFromTypes", "DaysFromType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DaysFromType> DaysFromTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_Projects_DaysFromTypes", "DaysFromType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DaysFromType>("BuildingModel.FK_Projects_DaysFromTypes", "DaysFromType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users", "User")]
        public User UserResponsible
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserResponsibleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Projects_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Projects_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Projects", "Expense")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Projects", "Expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Projects", "Expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Projects_ParentID", "Project1")]
        public EntityCollection<Project> ChildProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Projects_ParentID", "Project")]
        public Project ParentProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ParentProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_Projects_Projects_ParentID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_Projects", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_Projects", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_Projects", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Projects", "WorkLog")]
        public EntityCollection<WorkLog> WorkLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Projects", "WorkLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Projects", "WorkLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contractors_ContractorID", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_ContractorID", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_ContractorID", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_ContractorID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_ContractorID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Contractors_SubcontractorID", "Contractor")]
        public Contractor Subcontractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> SubcontractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_Projects_Contractors_SubcontractorID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Projects", "ProjectEmployee")]
        public EntityCollection<ProjectEmployee> ProjectEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Projects", "ProjectEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Projects", "ProjectEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Projects1", "ProjectEmployee")]
        public EntityCollection<ProjectEmployee> ProjectEmployees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Projects1", "ProjectEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Projects1", "ProjectEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_ProjectStatuses", "ProjectStatus")]
        public ProjectStatus Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStatus>("BuildingModel.FK_Projects_ProjectStatuses", "ProjectStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStatus>("BuildingModel.FK_Projects_ProjectStatuses", "ProjectStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectStatus> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStatus>("BuildingModel.FK_Projects_ProjectStatuses", "ProjectStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectStatus>("BuildingModel.FK_Projects_ProjectStatuses", "ProjectStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_ProjectTypes", "ProjectType")]
        public ProjectType ProjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_Projects_ProjectTypes", "ProjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_Projects_ProjectTypes", "ProjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectType> ProjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_Projects_ProjectTypes", "ProjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectType>("BuildingModel.FK_Projects_ProjectTypes", "ProjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_News_Projects", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("BuildingModel.FK_News_Projects", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("BuildingModel.FK_News_Projects", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Projects", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Projects", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Projects", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Invoices_Projects", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("BuildingModel.FK_Invoices_Projects", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("BuildingModel.FK_Invoices_Projects", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payrolls_Projects", "Payroll")]
        public EntityCollection<Payroll> Payrolls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payroll>("BuildingModel.FK_Payrolls_Projects", "Payroll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payroll>("BuildingModel.FK_Payrolls_Projects", "Payroll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Folders_Projects", "Folder")]
        public EntityCollection<Folder> Folders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("BuildingModel.FK_Folders_Projects", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("BuildingModel.FK_Folders_Projects", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Projects_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Projects_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Projects_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Projects_Employees", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectEmployee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectEmployee object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        public static ProjectEmployee CreateProjectEmployee(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 employeeID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID)
        {
            ProjectEmployee projectEmployee = new ProjectEmployee();
            projectEmployee.ID = id;
            projectEmployee.ProjectID = projectID;
            projectEmployee.EmployeeID = employeeID;
            projectEmployee.CreateDate = createDate;
            projectEmployee.ChangeDate = changeDate;
            projectEmployee.CreatorID = creatorID;
            projectEmployee.ChangerID = changerID;
            return projectEmployee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectEmployees_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectEmployees_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectEmployees_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_ProjectEmployees_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Projects1", "Project")]
        public Project Project1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> Project1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectEmployees_Projects1", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        public static ProjectFile CreateProjectFile(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 fileID)
        {
            ProjectFile projectFile = new ProjectFile();
            projectFile.ID = id;
            projectFile.ProjectID = projectID;
            projectFile.FileID = fileID;
            return projectFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectTaskID
        {
            get
            {
                return _ProjectTaskID;
            }
            set
            {
                OnProjectTaskIDChanging(value);
                ReportPropertyChanging("ProjectTaskID");
                _ProjectTaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectTaskID");
                OnProjectTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectTaskID;
        partial void OnProjectTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectTaskMessageID
        {
            get
            {
                return _ProjectTaskMessageID;
            }
            set
            {
                OnProjectTaskMessageIDChanging(value);
                ReportPropertyChanging("ProjectTaskMessageID");
                _ProjectTaskMessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectTaskMessageID");
                OnProjectTaskMessageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectTaskMessageID;
        partial void OnProjectTaskMessageIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectTaskMessageIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_Files", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ProjectFiles_Files", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ProjectFiles_Files", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("BuildingModel.FK_ProjectFiles_Files", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("BuildingModel.FK_ProjectFiles_Files", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectFiles_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectFiles_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectFiles_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectFiles_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory")]
        public ProjectFileCategory Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileCategory>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileCategory>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectFileCategory> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileCategory>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectFileCategory>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFileCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileTypes", "ProjectFileType")]
        public ProjectFileType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileType>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileType>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectFileType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFileType>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectFileType>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectTasks", "ProjectTask")]
        public ProjectTask ProjectTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectTask> ProjectTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectTask>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage")]
        public ProjectTaskMessage ProjectTaskMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTaskMessage>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTaskMessage>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectTaskMessage> ProjectTaskMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTaskMessage>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectTaskMessage>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectTaskMessage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectFileCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFileCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFileCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static ProjectFileCategory CreateProjectFileCategory(global::System.Int32 id, global::System.String name, global::System.String sysName, global::System.Boolean deleted, global::System.Int32 orderNumber, global::System.Int32 companyID)
        {
            ProjectFileCategory projectFileCategory = new ProjectFileCategory();
            projectFileCategory.ID = id;
            projectFileCategory.Name = name;
            projectFileCategory.SysName = sysName;
            projectFileCategory.Deleted = deleted;
            projectFileCategory.OrderNumber = orderNumber;
            projectFileCategory.CompanyID = companyID;
            return projectFileCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileCategories", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectFileCategories", "ProjectFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectFileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFileType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProjectFileType CreateProjectFileType(global::System.Int32 id, global::System.DateTime createDate, global::System.Int32 creatorID, global::System.DateTime changeDate, global::System.Int32 changerID, global::System.String name)
        {
            ProjectFileType projectFileType = new ProjectFileType();
            projectFileType.ID = id;
            projectFileType.CreateDate = createDate;
            projectFileType.CreatorID = creatorID;
            projectFileType.ChangeDate = changeDate;
            projectFileType.ChangerID = changerID;
            projectFileType.Name = name;
            return projectFileType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                OnConditionChanging(value);
                ReportPropertyChanging("Condition");
                _Condition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Condition");
                OnConditionChanged();
            }
        }
        private global::System.String _Condition;
        partial void OnConditionChanging(global::System.String value);
        partial void OnConditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuccessMessage
        {
            get
            {
                return _SuccessMessage;
            }
            set
            {
                OnSuccessMessageChanging(value);
                ReportPropertyChanging("SuccessMessage");
                _SuccessMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuccessMessage");
                OnSuccessMessageChanged();
            }
        }
        private global::System.String _SuccessMessage;
        partial void OnSuccessMessageChanging(global::System.String value);
        partial void OnSuccessMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultNameTemplate
        {
            get
            {
                return _ResultNameTemplate;
            }
            set
            {
                OnResultNameTemplateChanging(value);
                ReportPropertyChanging("ResultNameTemplate");
                _ResultNameTemplate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultNameTemplate");
                OnResultNameTemplateChanged();
            }
        }
        private global::System.String _ResultNameTemplate;
        partial void OnResultNameTemplateChanging(global::System.String value);
        partial void OnResultNameTemplateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectFileTypes", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectFileTypes", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFileTypes_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFileTypes_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static ProjectNote CreateProjectNote(global::System.Int32 id, global::System.String text, global::System.Int32 userID, global::System.DateTime date, global::System.Int32 projectID)
        {
            ProjectNote projectNote = new ProjectNote();
            projectNote.ID = id;
            projectNote.Text = text;
            projectNote.UserID = userID;
            projectNote.Date = date;
            projectNote.ProjectID = projectID;
            return projectNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_News_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_News_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_News_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_News_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_News_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectNotes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectNotes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectNotes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectNotes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectNotes_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectStage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectStage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectStage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="stageID">Initial value of the StageID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static ProjectStage CreateProjectStage(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 stageID, global::System.Int32 companyID)
        {
            ProjectStage projectStage = new ProjectStage();
            projectStage.ID = id;
            projectStage.ProjectID = projectID;
            projectStage.StageID = stageID;
            projectStage.CompanyID = companyID;
            return projectStage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StageID
        {
            get
            {
                return _StageID;
            }
            set
            {
                OnStageIDChanging(value);
                ReportPropertyChanging("StageID");
                _StageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StageID");
                OnStageIDChanged();
            }
        }
        private global::System.Int32 _StageID;
        partial void OnStageIDChanging(global::System.Int32 value);
        partial void OnStageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorkStages_Projects", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorkStages_Projects", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorkStages_Projects", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorkStages_Projects", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectWorkStages_Projects", "Projects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static ProjectStatus CreateProjectStatus(global::System.Int32 id, global::System.String name, global::System.Int32 orderNumber)
        {
            ProjectStatus projectStatus = new ProjectStatus();
            projectStatus.ID = id;
            projectStatus.Name = name;
            projectStatus.OrderNumber = orderNumber;
            return projectStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_ProjectStatuses", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_ProjectStatuses", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_ProjectStatuses", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectTask object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="responsibleID">Initial value of the ResponsibleID property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static ProjectTask CreateProjectTask(global::System.Int32 id, global::System.Int32 projectID, global::System.String name, global::System.Int32 responsibleID, global::System.String creator, global::System.DateTime createDate, global::System.Int32 orderNumber, global::System.Int32 statusID, global::System.Boolean deleted)
        {
            ProjectTask projectTask = new ProjectTask();
            projectTask.ID = id;
            projectTask.ProjectID = projectID;
            projectTask.Name = name;
            projectTask.ResponsibleID = responsibleID;
            projectTask.Creator = creator;
            projectTask.CreateDate = createDate;
            projectTask.OrderNumber = orderNumber;
            projectTask.StatusID = statusID;
            projectTask.Deleted = deleted;
            return projectTask;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResponsibleID
        {
            get
            {
                return _ResponsibleID;
            }
            set
            {
                OnResponsibleIDChanging(value);
                ReportPropertyChanging("ResponsibleID");
                _ResponsibleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponsibleID");
                OnResponsibleIDChanged();
            }
        }
        private global::System.Int32 _ResponsibleID;
        partial void OnResponsibleIDChanging(global::System.Int32 value);
        partial void OnResponsibleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateBegin
        {
            get
            {
                return _DateBegin;
            }
            set
            {
                OnDateBeginChanging(value);
                ReportPropertyChanging("DateBegin");
                _DateBegin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBegin");
                OnDateBeginChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateBegin;
        partial void OnDateBeginChanging(Nullable<global::System.DateTime> value);
        partial void OnDateBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEndPlan
        {
            get
            {
                return _DateEndPlan;
            }
            set
            {
                OnDateEndPlanChanging(value);
                ReportPropertyChanging("DateEndPlan");
                _DateEndPlan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEndPlan");
                OnDateEndPlanChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEndPlan;
        partial void OnDateEndPlanChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndPlanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusText
        {
            get
            {
                return _StatusText;
            }
            set
            {
                OnStatusTextChanging(value);
                ReportPropertyChanging("StatusText");
                _StatusText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusText");
                OnStatusTextChanged();
            }
        }
        private global::System.String _StatusText;
        partial void OnStatusTextChanging(global::System.String value);
        partial void OnStatusTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Changer
        {
            get
            {
                return _Changer;
            }
            set
            {
                OnChangerChanging(value);
                ReportPropertyChanging("Changer");
                _Changer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Changer");
                OnChangerChanged();
            }
        }
        private global::System.String _Changer;
        partial void OnChangerChanging(global::System.String value);
        partial void OnChangerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousID
        {
            get
            {
                return _PreviousID;
            }
            set
            {
                OnPreviousIDChanging(value);
                ReportPropertyChanging("PreviousID");
                _PreviousID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousID");
                OnPreviousIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousID;
        partial void OnPreviousIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PriorityID;
        partial void OnPriorityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TurnID
        {
            get
            {
                return _TurnID;
            }
            set
            {
                OnTurnIDChanging(value);
                ReportPropertyChanging("TurnID");
                _TurnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurnID");
                OnTurnIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TurnID;
        partial void OnTurnIDChanging(Nullable<global::System.Int32> value);
        partial void OnTurnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TermHours
        {
            get
            {
                return _TermHours;
            }
            set
            {
                OnTermHoursChanging(value);
                ReportPropertyChanging("TermHours");
                _TermHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermHours");
                OnTermHoursChanged();
            }
        }
        private Nullable<global::System.Double> _TermHours;
        partial void OnTermHoursChanging(Nullable<global::System.Double> value);
        partial void OnTermHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnalystDescription
        {
            get
            {
                return _AnalystDescription;
            }
            set
            {
                OnAnalystDescriptionChanging(value);
                ReportPropertyChanging("AnalystDescription");
                _AnalystDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnalystDescription");
                OnAnalystDescriptionChanged();
            }
        }
        private global::System.String _AnalystDescription;
        partial void OnAnalystDescriptionChanging(global::System.String value);
        partial void OnAnalystDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TesterDescription
        {
            get
            {
                return _TesterDescription;
            }
            set
            {
                OnTesterDescriptionChanging(value);
                ReportPropertyChanging("TesterDescription");
                _TesterDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TesterDescription");
                OnTesterDescriptionChanged();
            }
        }
        private global::System.String _TesterDescription;
        partial void OnTesterDescriptionChanging(global::System.String value);
        partial void OnTesterDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VisibilityID
        {
            get
            {
                return _VisibilityID;
            }
            set
            {
                OnVisibilityIDChanging(value);
                ReportPropertyChanging("VisibilityID");
                _VisibilityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibilityID");
                OnVisibilityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VisibilityID;
        partial void OnVisibilityIDChanging(Nullable<global::System.Int32> value);
        partial void OnVisibilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectTasks_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectTasks_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_ProjectTasks_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_ProjectTasks_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectTasks_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectTasks_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectTasks_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectTasks_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTaskMessages_ProjectTasks", "ProjectTaskMessage")]
        public EntityCollection<ProjectTaskMessage> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTaskMessage>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTaskMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTaskMessage>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTaskMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_StatusID", "Statbook")]
        public Statbook Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "Statbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_TaskTypes", "TaskType")]
        public TaskType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("BuildingModel.FK_ProjectTasks_TaskTypes", "TaskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("BuildingModel.FK_ProjectTasks_TaskTypes", "TaskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskType>("BuildingModel.FK_ProjectTasks_TaskTypes", "TaskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskType>("BuildingModel.FK_ProjectTasks_TaskTypes", "TaskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Users", "User")]
        public User UserResponsible
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectTasks_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectTasks_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserResponsibleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectTasks_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectTasks_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask1")]
        public EntityCollection<ProjectTask> NextTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask")]
        public ProjectTask PreviousTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectTask> PreviousTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTasks_ProjectTasks_PreviousID", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_PriorityID", "Statbook")]
        public Statbook Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "Statbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_TurnID", "Statbook")]
        public Statbook Turn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> TurnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "Statbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectTasks", "ProjectFile")]
        public EntityCollection<ProjectFile> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectTasks", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Invoices", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_ProjectTasks_Invoices", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_ProjectTasks_Invoices", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("BuildingModel.FK_ProjectTasks_Invoices", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("BuildingModel.FK_ProjectTasks_Invoices", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_VisibilityID", "Statbook")]
        public Statbook Visibility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> VisibilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "Statbook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectTaskMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectTaskMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectTaskMessage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="creatorName">Initial value of the CreatorName property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        public static ProjectTaskMessage CreateProjectTaskMessage(global::System.Int32 id, global::System.DateTime createDate, global::System.String creator, global::System.String creatorName, global::System.String text, global::System.Int32 taskID)
        {
            ProjectTaskMessage projectTaskMessage = new ProjectTaskMessage();
            projectTaskMessage.ID = id;
            projectTaskMessage.CreateDate = createDate;
            projectTaskMessage.Creator = creator;
            projectTaskMessage.CreatorName = creatorName;
            projectTaskMessage.Text = text;
            projectTaskMessage.TaskID = taskID;
            return projectTaskMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatorName
        {
            get
            {
                return _CreatorName;
            }
            set
            {
                OnCreatorNameChanging(value);
                ReportPropertyChanging("CreatorName");
                _CreatorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatorName");
                OnCreatorNameChanged();
            }
        }
        private global::System.String _CreatorName;
        partial void OnCreatorNameChanging(global::System.String value);
        partial void OnCreatorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Changer
        {
            get
            {
                return _Changer;
            }
            set
            {
                OnChangerChanging(value);
                ReportPropertyChanging("Changer");
                _Changer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Changer");
                OnChangerChanged();
            }
        }
        private global::System.String _Changer;
        partial void OnChangerChanging(global::System.String value);
        partial void OnChangerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysText
        {
            get
            {
                return _SysText;
            }
            set
            {
                OnSysTextChanging(value);
                ReportPropertyChanging("SysText");
                _SysText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysText");
                OnSysTextChanged();
            }
        }
        private global::System.String _SysText;
        partial void OnSysTextChanging(global::System.String value);
        partial void OnSysTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notify
        {
            get
            {
                return _Notify;
            }
            set
            {
                OnNotifyChanging(value);
                ReportPropertyChanging("Notify");
                _Notify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notify");
                OnNotifyChanged();
            }
        }
        private global::System.String _Notify;
        partial void OnNotifyChanging(global::System.String value);
        partial void OnNotifyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTaskMessages_ProjectTasks", "ProjectTask")]
        public ProjectTask ProjectTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectTask> ProjectTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectTask>("BuildingModel.FK_ProjectTaskMessages_ProjectTasks", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFiles_ProjectTaskMessages", "ProjectFile")]
        public EntityCollection<ProjectFile> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("BuildingModel.FK_ProjectFiles_ProjectTaskMessages", "ProjectFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static ProjectType CreateProjectType(global::System.Int32 id, global::System.String name, global::System.Int32 orderNumber)
        {
            ProjectType projectType = new ProjectType();
            projectType.ID = id;
            projectType.Name = name;
            projectType.OrderNumber = orderNumber;
            return projectType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_ProjectTypes", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_ProjectTypes", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_ProjectTypes", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTypes_ProjectTypes", "ProjectType1")]
        public ProjectType ProjectTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectType> ProjectTypes1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTypes_ProjectTypes", "ProjectType")]
        public ProjectType ProjectType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectType> ProjectType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectType>("BuildingModel.FK_ProjectTypes_ProjectTypes", "ProjectType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ProjectWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectWork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectWork object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="contractorExists">Initial value of the ContractorExists property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="factor">Initial value of the Factor property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="contractorVat">Initial value of the ContractorVat property.</param>
        /// <param name="kickback">Initial value of the Kickback property.</param>
        /// <param name="costContractor">Initial value of the CostContractor property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static ProjectWork CreateProjectWork(global::System.Int32 id, global::System.Boolean contractorExists, global::System.Decimal cost, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 projectID, global::System.Int32 companyID, global::System.Decimal factor, global::System.Decimal count, global::System.Decimal price, global::System.Boolean contractorVat, global::System.Decimal kickback, global::System.Decimal costContractor, global::System.Int32 orderNumber)
        {
            ProjectWork projectWork = new ProjectWork();
            projectWork.ID = id;
            projectWork.ContractorExists = contractorExists;
            projectWork.Cost = cost;
            projectWork.CreatorID = creatorID;
            projectWork.ChangerID = changerID;
            projectWork.CreateDate = createDate;
            projectWork.ChangeDate = changeDate;
            projectWork.ProjectID = projectID;
            projectWork.CompanyID = companyID;
            projectWork.Factor = factor;
            projectWork.Count = count;
            projectWork.Price = price;
            projectWork.ContractorVat = contractorVat;
            projectWork.Kickback = kickback;
            projectWork.CostContractor = costContractor;
            projectWork.OrderNumber = orderNumber;
            return projectWork;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ContractorExists
        {
            get
            {
                return _ContractorExists;
            }
            set
            {
                OnContractorExistsChanging(value);
                ReportPropertyChanging("ContractorExists");
                _ContractorExists = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorExists");
                OnContractorExistsChanged();
            }
        }
        private global::System.Boolean _ContractorExists;
        partial void OnContractorExistsChanging(global::System.Boolean value);
        partial void OnContractorExistsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractID;
        partial void OnContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysEnd
        {
            get
            {
                return _DaysEnd;
            }
            set
            {
                OnDaysEndChanging(value);
                ReportPropertyChanging("DaysEnd");
                _DaysEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysEnd");
                OnDaysEndChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysEnd;
        partial void OnDaysEndChanging(Nullable<global::System.Int32> value);
        partial void OnDaysEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysTypeID
        {
            get
            {
                return _DaysTypeID;
            }
            set
            {
                OnDaysTypeIDChanging(value);
                ReportPropertyChanging("DaysTypeID");
                _DaysTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysTypeID");
                OnDaysTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysTypeID;
        partial void OnDaysTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysFromTypeID
        {
            get
            {
                return _DaysFromTypeID;
            }
            set
            {
                OnDaysFromTypeIDChanging(value);
                ReportPropertyChanging("DaysFromTypeID");
                _DaysFromTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysFromTypeID");
                OnDaysFromTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysFromTypeID;
        partial void OnDaysFromTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDaysFromTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Factor
        {
            get
            {
                return _Factor;
            }
            set
            {
                OnFactorChanging(value);
                ReportPropertyChanging("Factor");
                _Factor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Factor");
                OnFactorChanged();
            }
        }
        private global::System.Decimal _Factor;
        partial void OnFactorChanging(global::System.Decimal value);
        partial void OnFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Decimal _Count;
        partial void OnCountChanging(global::System.Decimal value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ContractorVat
        {
            get
            {
                return _ContractorVat;
            }
            set
            {
                OnContractorVatChanging(value);
                ReportPropertyChanging("ContractorVat");
                _ContractorVat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorVat");
                OnContractorVatChanged();
            }
        }
        private global::System.Boolean _ContractorVat;
        partial void OnContractorVatChanging(global::System.Boolean value);
        partial void OnContractorVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Kickback
        {
            get
            {
                return _Kickback;
            }
            set
            {
                OnKickbackChanging(value);
                ReportPropertyChanging("Kickback");
                _Kickback = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Kickback");
                OnKickbackChanged();
            }
        }
        private global::System.Decimal _Kickback;
        partial void OnKickbackChanging(global::System.Decimal value);
        partial void OnKickbackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CostContractor
        {
            get
            {
                return _CostContractor;
            }
            set
            {
                OnCostContractorChanging(value);
                ReportPropertyChanging("CostContractor");
                _CostContractor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostContractor");
                OnCostContractorChanged();
            }
        }
        private global::System.Decimal _CostContractor;
        partial void OnCostContractorChanging(global::System.Decimal value);
        partial void OnCostContractorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DemountTypeID
        {
            get
            {
                return _DemountTypeID;
            }
            set
            {
                OnDemountTypeIDChanging(value);
                ReportPropertyChanging("DemountTypeID");
                _DemountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DemountTypeID");
                OnDemountTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DemountTypeID;
        partial void OnDemountTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDemountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DemountRate
        {
            get
            {
                return _DemountRate;
            }
            set
            {
                OnDemountRateChanging(value);
                ReportPropertyChanging("DemountRate");
                _DemountRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DemountRate");
                OnDemountRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _DemountRate;
        partial void OnDemountRateChanging(Nullable<global::System.Decimal> value);
        partial void OnDemountRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Contracts", "Contracts")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_ProjectWorks_Contracts", "Contracts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_ProjectWorks_Contracts", "Contracts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("BuildingModel.FK_ProjectWorks_Contracts", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("BuildingModel.FK_ProjectWorks_Contracts", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_ProjectWorks", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_ProjectWorks", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_ProjectWorks", "Payments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Users_ChangerID", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Users_CreatorID", "Users")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_WorkTypes", "WorkTypes")]
        public WorkType WorkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("BuildingModel.FK_ProjectWorks_WorkTypes", "WorkTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("BuildingModel.FK_ProjectWorks_WorkTypes", "WorkTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkType> WorkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("BuildingModel.FK_ProjectWorks_WorkTypes", "WorkTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkType>("BuildingModel.FK_ProjectWorks_WorkTypes", "WorkTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorks_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorks_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_ProjectWorks_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_ProjectWorks_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_DaysFromTypes", "DaysFromType")]
        public DaysFromType DaysFromType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "DaysFromType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "DaysFromType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DaysFromType> DaysFromTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DaysFromType>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "DaysFromType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DaysFromType>("BuildingModel.FK_ProjectWorks_DaysFromTypes", "DaysFromType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ProjectWorks_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ProjectWorks_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_ProjectWorks_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_ProjectWorks_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Refbook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Refbook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Refbook object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="needDescription">Initial value of the NeedDescription property.</param>
        /// <param name="needDate">Initial value of the NeedDate property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static Refbook CreateRefbook(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Boolean needDescription, global::System.Boolean needDate, global::System.Int32 typeID, global::System.Int32 orderNumber, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 companyID)
        {
            Refbook refbook = new Refbook();
            refbook.ID = id;
            refbook.Name = name;
            refbook.Deleted = deleted;
            refbook.NeedDescription = needDescription;
            refbook.NeedDate = needDate;
            refbook.TypeID = typeID;
            refbook.OrderNumber = orderNumber;
            refbook.CreateDate = createDate;
            refbook.ChangeDate = changeDate;
            refbook.CreatorID = creatorID;
            refbook.ChangerID = changerID;
            refbook.CompanyID = companyID;
            return refbook;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedDescription
        {
            get
            {
                return _NeedDescription;
            }
            set
            {
                OnNeedDescriptionChanging(value);
                ReportPropertyChanging("NeedDescription");
                _NeedDescription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedDescription");
                OnNeedDescriptionChanged();
            }
        }
        private global::System.Boolean _NeedDescription;
        partial void OnNeedDescriptionChanging(global::System.Boolean value);
        partial void OnNeedDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionCaption
        {
            get
            {
                return _DescriptionCaption;
            }
            set
            {
                OnDescriptionCaptionChanging(value);
                ReportPropertyChanging("DescriptionCaption");
                _DescriptionCaption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionCaption");
                OnDescriptionCaptionChanged();
            }
        }
        private global::System.String _DescriptionCaption;
        partial void OnDescriptionCaptionChanging(global::System.String value);
        partial void OnDescriptionCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedDate
        {
            get
            {
                return _NeedDate;
            }
            set
            {
                OnNeedDateChanging(value);
                ReportPropertyChanging("NeedDate");
                _NeedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedDate");
                OnNeedDateChanged();
            }
        }
        private global::System.Boolean _NeedDate;
        partial void OnNeedDateChanging(global::System.Boolean value);
        partial void OnNeedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DateCaption
        {
            get
            {
                return _DateCaption;
            }
            set
            {
                OnDateCaptionChanging(value);
                ReportPropertyChanging("DateCaption");
                _DateCaption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateCaption");
                OnDateCaptionChanged();
            }
        }
        private global::System.String _DateCaption;
        partial void OnDateCaptionChanging(global::System.String value);
        partial void OnDateCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_RefbookTypes", "RefbookType")]
        public RefbookType RefbookType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RefbookType>("BuildingModel.FK_Refbooks_RefbookTypes", "RefbookType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RefbookType>("BuildingModel.FK_Refbooks_RefbookTypes", "RefbookType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RefbookType> RefbookTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RefbookType>("BuildingModel.FK_Refbooks_RefbookTypes", "RefbookType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RefbookType>("BuildingModel.FK_Refbooks_RefbookTypes", "RefbookType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Refbooks_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Refbooks_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Refbooks_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Refbooks_TypeID", "ContactPerson")]
        public EntityCollection<ContactPerson> ContactPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "ContactPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Refbooks_TypeID", "ContactPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Refbooks_TypeID", "ContractorNote")]
        public EntityCollection<ContractorNote> ContractorNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "ContractorNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Refbooks_TypeID", "ContractorNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="RefbookType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RefbookType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RefbookType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        /// <param name="hasOther">Initial value of the HasOther property.</param>
        public static RefbookType CreateRefbookType(global::System.Int32 id, global::System.String name, global::System.String sysName, global::System.Boolean hasOther)
        {
            RefbookType refbookType = new RefbookType();
            refbookType.ID = id;
            refbookType.Name = name;
            refbookType.SysName = sysName;
            refbookType.HasOther = hasOther;
            return refbookType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasOther
        {
            get
            {
                return _HasOther;
            }
            set
            {
                OnHasOtherChanging(value);
                ReportPropertyChanging("HasOther");
                _HasOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasOther");
                OnHasOtherChanged();
            }
        }
        private global::System.Boolean _HasOther;
        partial void OnHasOtherChanging(global::System.Boolean value);
        partial void OnHasOtherChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_RefbookTypes", "Refbook")]
        public EntityCollection<Refbook> Refbooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_RefbookTypes", "Refbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_RefbookTypes", "Refbook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="RepeatInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RepeatInterval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RepeatInterval object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="days">Initial value of the Days property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="years">Initial value of the Years property.</param>
        /// <param name="beforeDays">Initial value of the BeforeDays property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static RepeatInterval CreateRepeatInterval(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 days, global::System.Int32 months, global::System.Int32 years, global::System.Int32 beforeDays, global::System.Int32 orderNumber, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 companyID)
        {
            RepeatInterval repeatInterval = new RepeatInterval();
            repeatInterval.ID = id;
            repeatInterval.Name = name;
            repeatInterval.Deleted = deleted;
            repeatInterval.Days = days;
            repeatInterval.Months = months;
            repeatInterval.Years = years;
            repeatInterval.BeforeDays = beforeDays;
            repeatInterval.OrderNumber = orderNumber;
            repeatInterval.CreateDate = createDate;
            repeatInterval.ChangeDate = changeDate;
            repeatInterval.CreatorID = creatorID;
            repeatInterval.ChangerID = changerID;
            repeatInterval.CompanyID = companyID;
            return repeatInterval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.Int32 _Days;
        partial void OnDaysChanging(global::System.Int32 value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Years
        {
            get
            {
                return _Years;
            }
            set
            {
                OnYearsChanging(value);
                ReportPropertyChanging("Years");
                _Years = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Years");
                OnYearsChanged();
            }
        }
        private global::System.Int32 _Years;
        partial void OnYearsChanging(global::System.Int32 value);
        partial void OnYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeforeDays
        {
            get
            {
                return _BeforeDays;
            }
            set
            {
                OnBeforeDaysChanging(value);
                ReportPropertyChanging("BeforeDays");
                _BeforeDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeforeDays");
                OnBeforeDaysChanged();
            }
        }
        private global::System.Int32 _BeforeDays;
        partial void OnBeforeDaysChanging(global::System.Int32 value);
        partial void OnBeforeDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_RepeatIntervals", "Incident")]
        public EntityCollection<Incident> Incidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.FK_Incidents_RepeatIntervals", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.FK_Incidents_RepeatIntervals", "Incident", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_RepeatIntervals_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_RepeatIntervals_UsersCreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="ReportFilter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportFilter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportFilter object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="default">Initial value of the Default property.</param>
        public static ReportFilter CreateReportFilter(global::System.Int32 id, global::System.String name, global::System.Int32 userID, global::System.Int32 reportID, global::System.Boolean @default)
        {
            ReportFilter reportFilter = new ReportFilter();
            reportFilter.ID = id;
            reportFilter.Name = name;
            reportFilter.UserID = userID;
            reportFilter.ReportID = reportID;
            reportFilter.Default = @default;
            return reportFilter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.Int32 _ReportID;
        partial void OnReportIDChanging(global::System.Int32 value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Default
        {
            get
            {
                return _Default;
            }
            set
            {
                OnDefaultChanging(value);
                ReportPropertyChanging("Default");
                _Default = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Default");
                OnDefaultChanged();
            }
        }
        private global::System.Boolean _Default;
        partial void OnDefaultChanging(global::System.Boolean value);
        partial void OnDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ReportFilters_Statbooks_ReportID", "Statbook")]
        public Statbook Statbook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> StatbookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "Statbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ReportFilters_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ReportFilters_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ReportFilters_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_ReportFilters_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_ReportFilters_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name, global::System.String sysName, global::System.Boolean deleted)
        {
            Role role = new Role();
            role.ID = id;
            role.Name = name;
            role.SysName = sysName;
            role.Deleted = deleted;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Roles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BuildingModel.FK_Users_Roles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BuildingModel.FK_Users_Roles", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Roles", "Incident")]
        public EntityCollection<Incident> Incidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.FK_Incidents_Roles", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.FK_Incidents_Roles", "Incident", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Salary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Salary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Salary object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static Salary CreateSalary(global::System.Int32 id, global::System.Decimal value, global::System.DateTime createDate, global::System.Int32 creatorID, global::System.Int32 employeeID, global::System.DateTime date, global::System.Int32 companyID)
        {
            Salary salary = new Salary();
            salary.ID = id;
            salary.Value = value;
            salary.CreateDate = createDate;
            salary.CreatorID = creatorID;
            salary.EmployeeID = employeeID;
            salary.Date = date;
            salary.CompanyID = companyID;
            return salary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Salaries_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Salaries_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Salaries_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Salaries_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Salaries_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Salaries_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Salaries_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Salaries_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Salaries_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Salaries_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Statbook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statbook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Statbook object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="needDescription">Initial value of the NeedDescription property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static Statbook CreateStatbook(global::System.Int32 id, global::System.String name, global::System.String sysName, global::System.Boolean deleted, global::System.Boolean needDescription, global::System.Int32 typeID, global::System.Int32 orderNumber)
        {
            Statbook statbook = new Statbook();
            statbook.ID = id;
            statbook.Name = name;
            statbook.SysName = sysName;
            statbook.Deleted = deleted;
            statbook.NeedDescription = needDescription;
            statbook.TypeID = typeID;
            statbook.OrderNumber = orderNumber;
            return statbook;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedDescription
        {
            get
            {
                return _NeedDescription;
            }
            set
            {
                OnNeedDescriptionChanging(value);
                ReportPropertyChanging("NeedDescription");
                _NeedDescription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedDescription");
                OnNeedDescriptionChanged();
            }
        }
        private global::System.Boolean _NeedDescription;
        partial void OnNeedDescriptionChanging(global::System.Boolean value);
        partial void OnNeedDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionCaption
        {
            get
            {
                return _DescriptionCaption;
            }
            set
            {
                OnDescriptionCaptionChanging(value);
                ReportPropertyChanging("DescriptionCaption");
                _DescriptionCaption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionCaption");
                OnDescriptionCaptionChanged();
            }
        }
        private global::System.String _DescriptionCaption;
        partial void OnDescriptionCaptionChanging(global::System.String value);
        partial void OnDescriptionCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Statbooks_StatbookTypes", "StatbookType")]
        public StatbookType StatbookType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatbookType>("BuildingModel.FK_Statbooks_StatbookTypes", "StatbookType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatbookType>("BuildingModel.FK_Statbooks_StatbookTypes", "StatbookType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatbookType> StatbookTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatbookType>("BuildingModel.FK_Statbooks_StatbookTypes", "StatbookType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatbookType>("BuildingModel.FK_Statbooks_StatbookTypes", "StatbookType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Statbooks_TypeID", "Wallet")]
        public EntityCollection<Wallet> Wallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Statbooks_GenderID", "ContactPerson")]
        public EntityCollection<ContactPerson> ContactPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "ContactPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Statbooks_GenderID", "ContactPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_StatusID", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_StatusID", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ReportFilters_Statbooks_ReportID", "ReportFilter")]
        public EntityCollection<ReportFilter> ReportFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportFilter>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "ReportFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportFilter>("BuildingModel.FK_ReportFilters_Statbooks_ReportID", "ReportFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_PriorityID", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_PriorityID", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_TurnID", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_TurnID", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Statbooks_VisibilityID", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Statbooks_VisibilityID", "ProjectTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="StatbookType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatbookType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatbookType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sysName">Initial value of the SysName property.</param>
        public static StatbookType CreateStatbookType(global::System.Int32 id, global::System.String name, global::System.String sysName)
        {
            StatbookType statbookType = new StatbookType();
            statbookType.ID = id;
            statbookType.Name = name;
            statbookType.SysName = sysName;
            return statbookType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Statbooks_StatbookTypes", "Statbook")]
        public EntityCollection<Statbook> Statbooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Statbook>("BuildingModel.FK_Statbooks_StatbookTypes", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Statbook>("BuildingModel.FK_Statbooks_StatbookTypes", "Statbook", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="SystemSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="public">Initial value of the Public property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static SystemSetting CreateSystemSetting(global::System.Int32 id, global::System.String title, global::System.String name, global::System.String value, global::System.DateTime date, global::System.Boolean @public, global::System.Int32 companyID)
        {
            SystemSetting systemSetting = new SystemSetting();
            systemSetting.ID = id;
            systemSetting.Title = title;
            systemSetting.Name = name;
            systemSetting.Value = value;
            systemSetting.Date = date;
            systemSetting.Public = @public;
            systemSetting.CompanyID = companyID;
            return systemSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Public
        {
            get
            {
                return _Public;
            }
            set
            {
                OnPublicChanging(value);
                ReportPropertyChanging("Public");
                _Public = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Public");
                OnPublicChanged();
            }
        }
        private global::System.Boolean _Public;
        partial void OnPublicChanging(global::System.Boolean value);
        partial void OnPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="TaskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="sortNumber">Initial value of the SortNumber property.</param>
        /// <param name="report">Initial value of the Report property.</param>
        public static TaskType CreateTaskType(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 sortNumber, global::System.Boolean report)
        {
            TaskType taskType = new TaskType();
            taskType.ID = id;
            taskType.Name = name;
            taskType.Deleted = deleted;
            taskType.SortNumber = sortNumber;
            taskType.Report = report;
            return taskType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortNumber
        {
            get
            {
                return _SortNumber;
            }
            set
            {
                OnSortNumberChanging(value);
                ReportPropertyChanging("SortNumber");
                _SortNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortNumber");
                OnSortNumberChanged();
            }
        }
        private global::System.Int32 _SortNumber;
        partial void OnSortNumberChanging(global::System.Int32 value);
        partial void OnSortNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private global::System.Boolean _Report;
        partial void OnReportChanging(global::System.Boolean value);
        partial void OnReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_TaskTypes", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_TaskTypes", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_TaskTypes", "ProjectTask", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="walletFromID">Initial value of the WalletFromID property.</param>
        /// <param name="walletToID">Initial value of the WalletToID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amountSent">Initial value of the AmountSent property.</param>
        /// <param name="amountReceived">Initial value of the AmountReceived property.</param>
        /// <param name="ratio">Initial value of the Ratio property.</param>
        public static Transfer CreateTransfer(global::System.Int32 id, global::System.Int32 walletFromID, global::System.Int32 walletToID, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.DateTime date, global::System.Decimal amountSent, global::System.Decimal amountReceived, global::System.Decimal ratio)
        {
            Transfer transfer = new Transfer();
            transfer.ID = id;
            transfer.WalletFromID = walletFromID;
            transfer.WalletToID = walletToID;
            transfer.CreateDate = createDate;
            transfer.ChangeDate = changeDate;
            transfer.CreatorID = creatorID;
            transfer.ChangerID = changerID;
            transfer.Date = date;
            transfer.AmountSent = amountSent;
            transfer.AmountReceived = amountReceived;
            transfer.Ratio = ratio;
            return transfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WalletFromID
        {
            get
            {
                return _WalletFromID;
            }
            set
            {
                OnWalletFromIDChanging(value);
                ReportPropertyChanging("WalletFromID");
                _WalletFromID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletFromID");
                OnWalletFromIDChanged();
            }
        }
        private global::System.Int32 _WalletFromID;
        partial void OnWalletFromIDChanging(global::System.Int32 value);
        partial void OnWalletFromIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WalletToID
        {
            get
            {
                return _WalletToID;
            }
            set
            {
                OnWalletToIDChanging(value);
                ReportPropertyChanging("WalletToID");
                _WalletToID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletToID");
                OnWalletToIDChanged();
            }
        }
        private global::System.Int32 _WalletToID;
        partial void OnWalletToIDChanging(global::System.Int32 value);
        partial void OnWalletToIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountSent
        {
            get
            {
                return _AmountSent;
            }
            set
            {
                OnAmountSentChanging(value);
                ReportPropertyChanging("AmountSent");
                _AmountSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountSent");
                OnAmountSentChanged();
            }
        }
        private global::System.Decimal _AmountSent;
        partial void OnAmountSentChanging(global::System.Decimal value);
        partial void OnAmountSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountReceived
        {
            get
            {
                return _AmountReceived;
            }
            set
            {
                OnAmountReceivedChanging(value);
                ReportPropertyChanging("AmountReceived");
                _AmountReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountReceived");
                OnAmountReceivedChanged();
            }
        }
        private global::System.Decimal _AmountReceived;
        partial void OnAmountReceivedChanging(global::System.Decimal value);
        partial void OnAmountReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Ratio
        {
            get
            {
                return _Ratio;
            }
            set
            {
                OnRatioChanging(value);
                ReportPropertyChanging("Ratio");
                _Ratio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ratio");
                OnRatioChanged();
            }
        }
        private global::System.Decimal _Ratio;
        partial void OnRatioChanging(global::System.Decimal value);
        partial void OnRatioChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Transfers_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Transfers_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Transfers_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Wallets_WalletFromID", "Wallet")]
        public Wallet WalletFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Wallets_WalletToID", "Wallet")]
        public Wallet WalletTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Wallet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="blocked">Initial value of the Blocked property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String login, global::System.String password, global::System.String name, global::System.DateTime registrationDate, global::System.DateTime lastLoginDate, global::System.Boolean blocked, global::System.Boolean deleted, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 roleID)
        {
            User user = new User();
            user.ID = id;
            user.Login = login;
            user.Password = password;
            user.Name = name;
            user.RegistrationDate = registrationDate;
            user.LastLoginDate = lastLoginDate;
            user.Blocked = blocked;
            user.Deleted = deleted;
            user.CreateDate = createDate;
            user.ChangeDate = changeDate;
            user.RoleID = roleID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patronymic
        {
            get
            {
                return _Patronymic;
            }
            set
            {
                OnPatronymicChanging(value);
                ReportPropertyChanging("Patronymic");
                _Patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patronymic");
                OnPatronymicChanged();
            }
        }
        private global::System.String _Patronymic;
        partial void OnPatronymicChanging(global::System.String value);
        partial void OnPatronymicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Blocked
        {
            get
            {
                return _Blocked;
            }
            set
            {
                OnBlockedChanging(value);
                ReportPropertyChanging("Blocked");
                _Blocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Blocked");
                OnBlockedChanged();
            }
        }
        private global::System.Boolean _Blocked;
        partial void OnBlockedChanging(global::System.Boolean value);
        partial void OnBlockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatorID;
        partial void OnCreatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChangerID;
        partial void OnChangerIDChanging(Nullable<global::System.Int32> value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Users_ChangerID", "Acts")]
        public EntityCollection<Act> Acts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Act>("BuildingModel.FK_Acts_Users_ChangerID", "Acts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Act>("BuildingModel.FK_Acts_Users_ChangerID", "Acts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Acts_Users_CreatorID", "Acts")]
        public EntityCollection<Act> Acts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Act>("BuildingModel.FK_Acts_Users_CreatorID", "Acts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Act>("BuildingModel.FK_Acts_Users_CreatorID", "Acts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Users_ChangerID", "ContactPersons")]
        public EntityCollection<ContactPerson> ContactPersons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Users_ChangerID", "ContactPersons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Users_ChangerID", "ContactPersons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContactPersons_Users_CreatorID", "ContactPersons")]
        public EntityCollection<ContactPerson> ContactPersons1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Users_CreatorID", "ContactPersons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactPerson>("BuildingModel.FK_ContactPersons_Users_CreatorID", "ContactPersons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Users_ChangerID", "Contracts")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_Users_ChangerID", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_Users_ChangerID", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contracts_Users_CreatorID", "Contracts")]
        public EntityCollection<Contract> Contracts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("BuildingModel.FK_Contracts_Users_CreatorID", "Contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("BuildingModel.FK_Contracts_Users_CreatorID", "Contracts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Users", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Users", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Users", "Payments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Users_CreatorID", "Payments")]
        public EntityCollection<Payment> Payments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Users_CreatorID", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Users_CreatorID", "Payments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users_ChangerID", "Projects")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Users_ChangerID", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Users_ChangerID", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users_CreatorID", "Projects")]
        public EntityCollection<Project> Projects1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Users_CreatorID", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Users_CreatorID", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Users_ChangerID", "ProjectWorks")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "ProjectWorks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Users_ChangerID", "ProjectWorks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_Users_CreatorID", "ProjectWorks")]
        public EntityCollection<ProjectWork> ProjectWorks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "ProjectWorks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_Users_CreatorID", "ProjectWorks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Users_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Users_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BuildingModel.FK_Users_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BuildingModel.FK_Users_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Users_ChangerID", "Users1")]
        public EntityCollection<User> Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BuildingModel.FK_Users_Users_ChangerID", "Users1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BuildingModel.FK_Users_Users_ChangerID", "Users1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Users_ChangerID", "Users")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_ChangerID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_ChangerID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_ChangerID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Users_Users_ChangerID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Users_CreatorID", "Users1")]
        public EntityCollection<User> Users11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BuildingModel.FK_Users_Users_CreatorID", "Users1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BuildingModel.FK_Users_Users_CreatorID", "Users1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Users_CreatorID", "Users")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_CreatorID", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_CreatorID", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Users_Users_CreatorID", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Users_Users_CreatorID", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_UserSettings_Users", "UserSettings")]
        public EntityCollection<UserSetting> UserSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSetting>("BuildingModel.FK_UserSettings_Users", "UserSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSetting>("BuildingModel.FK_UserSettings_Users", "UserSettings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_ChangerID", "Department")]
        public EntityCollection<Department> DepartmentsChanged
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("BuildingModel.FK_Departments_Users_ChangerID", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("BuildingModel.FK_Departments_Users_ChangerID", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_CreatorID", "Department")]
        public EntityCollection<Department> DepartmentsCreated
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("BuildingModel.FK_Departments_Users_CreatorID", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("BuildingModel.FK_Departments_Users_CreatorID", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Departments_Users_ManagerID", "Department")]
        public EntityCollection<Department> DepartmentsManager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("BuildingModel.FK_Departments_Users_ManagerID", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("BuildingModel.FK_Departments_Users_ManagerID", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Users_ChangerID", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Users_ChangerID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Users_ChangerID", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Users_CreatorID", "Employee")]
        public EntityCollection<Employee> Employees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Users_CreatorID", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Users_CreatorID", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Users_ChangerID", "Expens")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Users_ChangerID", "Expens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Users_ChangerID", "Expens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Users_CreatorID", "Expens")]
        public EntityCollection<Expense> Expenses1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Users_CreatorID", "Expens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Users_CreatorID", "Expens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePeriods_Users_ChangerID", "ExpensePeriod")]
        public EntityCollection<ExpensePeriod> ExpensePeriods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePeriod>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "ExpensePeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePeriod>("BuildingModel.FK_ExpensePeriods_Users_ChangerID", "ExpensePeriod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePeriods_Users_CreatorID", "ExpensePeriod")]
        public EntityCollection<ExpensePeriod> ExpensePeriods1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePeriod>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "ExpensePeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePeriod>("BuildingModel.FK_ExpensePeriods_Users_CreatorID", "ExpensePeriod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Projects_Users", "Project")]
        public EntityCollection<Project> Projects2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("BuildingModel.FK_Projects_Users", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("BuildingModel.FK_Projects_Users", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Users_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Users_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Users_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Users_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Users_ChangerID", "ExpensePrice")]
        public EntityCollection<ExpensePrice> ExpensePrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "ExpensePrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Users_ChangerID", "ExpensePrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpensePrices_Users_CreatorID", "ExpensePrice")]
        public EntityCollection<ExpensePrice> ExpensePrices1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "ExpensePrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpensePrice>("BuildingModel.FK_ExpensePrices_Users_CreatorID", "ExpensePrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseCategories_Users_ChangerID", "ExpenseCategory")]
        public EntityCollection<ExpenseCategory> ExpenseCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseCategory>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseCategory>("BuildingModel.FK_ExpenseCategories_Users_ChangerID", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseCategories_Users_CreatorID", "ExpenseCategory")]
        public EntityCollection<ExpenseCategory> ExpenseCategories1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseCategory>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseCategory>("BuildingModel.FK_ExpenseCategories_Users_CreatorID", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Users", "LegalDetail")]
        public EntityCollection<LegalDetail> LegalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Users", "LegalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Users", "LegalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_LegalDetails_Users_ChangerID", "LegalDetail")]
        public EntityCollection<LegalDetail> LegalDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Users_ChangerID", "LegalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalDetail>("BuildingModel.FK_LegalDetails_Users_ChangerID", "LegalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Users_ChangerID", "PhysicalDetail")]
        public EntityCollection<PhysicalDetail> PhysicalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "PhysicalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Users_ChangerID", "PhysicalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_PhysicalDetails_Users_CreatorID", "PhysicalDetail")]
        public EntityCollection<PhysicalDetail> PhysicalDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "PhysicalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalDetail>("BuildingModel.FK_PhysicalDetails_Users_CreatorID", "PhysicalDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Users_ChangerID", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("BuildingModel.FK_Files_Users_ChangerID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("BuildingModel.FK_Files_Users_ChangerID", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Files_Users_CreatorID", "File")]
        public EntityCollection<File> Files1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("BuildingModel.FK_Files_Users_CreatorID", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("BuildingModel.FK_Files_Users_CreatorID", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFileTypes_Users_ChangerID", "ProjectFileType")]
        public EntityCollection<ProjectFileType> ProjectFileTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFileType>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "ProjectFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFileType>("BuildingModel.FK_ProjectFileTypes_Users_ChangerID", "ProjectFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectFileTypes_Users_CreatorID", "ProjectFileType")]
        public EntityCollection<ProjectFileType> ProjectFileTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFileType>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "ProjectFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFileType>("BuildingModel.FK_ProjectFileTypes_Users_CreatorID", "ProjectFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Users_CreatorID", "Incident")]
        public EntityCollection<Incident> Incidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.FK_Incidents_Users_CreatorID", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.FK_Incidents_Users_CreatorID", "Incident", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Incidents_Users_ForUserID", "Incident")]
        public EntityCollection<Incident> Incidents1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Incident>("BuildingModel.FK_Incidents_Users_ForUserID", "Incident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Incident>("BuildingModel.FK_Incidents_Users_ForUserID", "Incident", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Salaries_Users", "Salary")]
        public EntityCollection<Salary> Salaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Salary>("BuildingModel.FK_Salaries_Users", "Salary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Salary>("BuildingModel.FK_Salaries_Users", "Salary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Users_ChangerID", "WorkLog")]
        public EntityCollection<WorkLog> WorkLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Users_ChangerID", "WorkLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Users_ChangerID", "WorkLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Users_CreatorID", "WorkLog")]
        public EntityCollection<WorkLog> WorkLogs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Users_CreatorID", "WorkLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkLog>("BuildingModel.FK_WorkLogs_Users_CreatorID", "WorkLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users", "IncidentUser")]
        public EntityCollection<IncidentUser> IncidentUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users", "IncidentUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users", "IncidentUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users_ChangerID", "IncidentUser")]
        public EntityCollection<IncidentUser> IncidentUsers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "IncidentUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users_ChangerID", "IncidentUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_IncidentUsers_Users_CreatorID", "IncidentUser")]
        public EntityCollection<IncidentUser> IncidentUsers2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "IncidentUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IncidentUser>("BuildingModel.FK_IncidentUsers_Users_CreatorID", "IncidentUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_RepeatIntervals_Users_ChangerID", "RepeatInterval")]
        public EntityCollection<RepeatInterval> RepeatIntervals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepeatInterval>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "RepeatInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepeatInterval>("BuildingModel.FK_RepeatIntervals_Users_ChangerID", "RepeatInterval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_RepeatIntervals_UsersCreatorID", "RepeatInterval")]
        public EntityCollection<RepeatInterval> RepeatIntervals1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepeatInterval>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "RepeatInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepeatInterval>("BuildingModel.FK_RepeatIntervals_UsersCreatorID", "RepeatInterval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_Users_ChangerID", "Refbook")]
        public EntityCollection<Refbook> Refbooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_Users_ChangerID", "Refbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_Users_ChangerID", "Refbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Refbooks_Users_CreatorID", "Refbook")]
        public EntityCollection<Refbook> Refbooks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_Users_CreatorID", "Refbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Refbook>("BuildingModel.FK_Refbooks_Users_CreatorID", "Refbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Users_ChangerID", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Users_ChangerID", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Users_ChangerID", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Users_CreatorID", "Transfer")]
        public EntityCollection<Transfer> Transfers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Users_CreatorID", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Users_CreatorID", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Users_ChangerID", "WalletRatio")]
        public EntityCollection<WalletRatio> WalletRatios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Users_ChangerID", "WalletRatio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Users_ChangerID", "WalletRatio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Users_CreatorID", "WalletRatio")]
        public EntityCollection<WalletRatio> WalletRatios1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Users_CreatorID", "WalletRatio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Users_CreatorID", "WalletRatio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Users_ChangerID", "Wallet")]
        public EntityCollection<Wallet> Wallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Users_ChangerID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Users_ChangerID", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Users_CreatorID", "Wallet")]
        public EntityCollection<Wallet> Wallets1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Users_CreatorID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallet>("BuildingModel.FK_Wallets_Users_CreatorID", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Users_ChangerID", "EmployeeWallet")]
        public EntityCollection<EmployeeWallet> EmployeeWallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "EmployeeWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Users_ChangerID", "EmployeeWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Users_CreatorID", "EmployeeWallet")]
        public EntityCollection<EmployeeWallet> EmployeeWallets1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "EmployeeWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Users_CreatorID", "EmployeeWallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_ChangerID", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_ChangerID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_ChangerID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_CreatorID", "Contractor")]
        public EntityCollection<Contractor> Contractors1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_CreatorID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_CreatorID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Users_ChangerID", "ProjectEmployee")]
        public EntityCollection<ProjectEmployee> ProjectEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "ProjectEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Users_ChangerID", "ProjectEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectEmployees_Users_CreatorID", "ProjectEmployee")]
        public EntityCollection<ProjectEmployee> ProjectEmployees1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "ProjectEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectEmployee>("BuildingModel.FK_ProjectEmployees_Users_CreatorID", "ProjectEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Users_ChangerID", "ContractorNote")]
        public EntityCollection<ContractorNote> ContractorNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "ContractorNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Users_ChangerID", "ContractorNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ContractorNotes_Users_CreatorID", "ContractorNote")]
        public EntityCollection<ContractorNote> ContractorNotes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "ContractorNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorNote>("BuildingModel.FK_ContractorNotes_Users_CreatorID", "ContractorNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Contractors_Users_ResponsibleID", "Contractor")]
        public EntityCollection<Contractor> ResponsibleContractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_ResponsibleID", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("BuildingModel.FK_Contractors_Users_ResponsibleID", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectNotes_Users", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("BuildingModel.FK_ProjectNotes_Users", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("BuildingModel.FK_ProjectNotes_Users", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectTasks_Users", "ProjectTask")]
        public EntityCollection<ProjectTask> ProjectTasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Users", "ProjectTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTask>("BuildingModel.FK_ProjectTasks_Users", "ProjectTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ReportFilters_Users", "ReportFilter")]
        public EntityCollection<ReportFilter> ReportFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportFilter>("BuildingModel.FK_ReportFilters_Users", "ReportFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportFilter>("BuildingModel.FK_ReportFilters_Users", "ReportFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Users_Contractors", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Users_Contractors", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Users_Contractors", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("BuildingModel.FK_Users_Contractors", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("BuildingModel.FK_Users_Contractors", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="UserSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static UserSetting CreateUserSetting(global::System.Int32 id, global::System.Int32 userID, global::System.String name, global::System.String value)
        {
            UserSetting userSetting = new UserSetting();
            userSetting.ID = id;
            userSetting.UserID = userID;
            userSetting.Name = name;
            userSetting.Value = value;
            return userSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_UserSettings_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_UserSettings_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_UserSettings_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_UserSettings_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_UserSettings_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="Wallet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wallet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wallet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="initialBalance">Initial value of the InitialBalance property.</param>
        public static Wallet CreateWallet(global::System.Int32 id, global::System.String name, global::System.DateTime createDate, global::System.Int32 creatorID, global::System.DateTime changeDate, global::System.Int32 changerID, global::System.Boolean deleted, global::System.Int32 typeID, global::System.Int32 companyID, global::System.Decimal balance, global::System.Int32 orderNumber, global::System.Decimal initialBalance)
        {
            Wallet wallet = new Wallet();
            wallet.ID = id;
            wallet.Name = name;
            wallet.CreateDate = createDate;
            wallet.CreatorID = creatorID;
            wallet.ChangeDate = changeDate;
            wallet.ChangerID = changerID;
            wallet.Deleted = deleted;
            wallet.TypeID = typeID;
            wallet.CompanyID = companyID;
            wallet.Balance = balance;
            wallet.OrderNumber = orderNumber;
            wallet.InitialBalance = initialBalance;
            return wallet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InitialBalance
        {
            get
            {
                return _InitialBalance;
            }
            set
            {
                OnInitialBalanceChanging(value);
                ReportPropertyChanging("InitialBalance");
                _InitialBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InitialBalance");
                OnInitialBalanceChanged();
            }
        }
        private global::System.Decimal _InitialBalance;
        partial void OnInitialBalanceChanging(global::System.Decimal value);
        partial void OnInitialBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Employees_Wallets", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("BuildingModel.FK_Employees_Wallets", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("BuildingModel.FK_Employees_Wallets", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Wallets_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Wallets_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_Wallets_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_Wallets_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Expenses_Wallets", "Expense")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("BuildingModel.FK_Expenses_Wallets", "Expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("BuildingModel.FK_Expenses_Wallets", "Expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ExpenseTypes_Wallets", "ExpenseType")]
        public EntityCollection<ExpenseType> ExpenseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_Wallets", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseType>("BuildingModel.FK_ExpenseTypes_Wallets", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Payments_Wallets", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BuildingModel.FK_Payments_Wallets", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BuildingModel.FK_Payments_Wallets", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Statbooks_TypeID", "Statbook")]
        public Statbook Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Statbook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Statbook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Statbook> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Statbook>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Statbook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Statbook>("BuildingModel.FK_Wallets_Statbooks_TypeID", "Statbook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Wallets_WalletFromID", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Wallets_WalletFromID", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Transfers_Wallets_WalletToID", "Transfer")]
        public EntityCollection<Transfer> Transfers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BuildingModel.FK_Transfers_Wallets_WalletToID", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Wallets_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_Wallets_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_Wallets_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_Wallets_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletFromID", "WalletRatio")]
        public EntityCollection<WalletRatio> WalletFromRatios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "WalletRatio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "WalletRatio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletToID", "WalletRatio")]
        public EntityCollection<WalletRatio> WalletToRatios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "WalletRatio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WalletRatio>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "WalletRatio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_EmployeeWallets_Wallets", "EmployeeWallet")]
        public EntityCollection<EmployeeWallet> EmployeeWallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Wallets", "EmployeeWallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWallet>("BuildingModel.FK_EmployeeWallets_Wallets", "EmployeeWallet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="WalletRatio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WalletRatio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WalletRatio object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ratio">Initial value of the Ratio property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static WalletRatio CreateWalletRatio(global::System.Int32 id, global::System.Decimal ratio, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID, global::System.Int32 companyID)
        {
            WalletRatio walletRatio = new WalletRatio();
            walletRatio.ID = id;
            walletRatio.Ratio = ratio;
            walletRatio.CreateDate = createDate;
            walletRatio.ChangeDate = changeDate;
            walletRatio.CreatorID = creatorID;
            walletRatio.ChangerID = changerID;
            walletRatio.CompanyID = companyID;
            return walletRatio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Ratio
        {
            get
            {
                return _Ratio;
            }
            set
            {
                OnRatioChanging(value);
                ReportPropertyChanging("Ratio");
                _Ratio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ratio");
                OnRatioChanged();
            }
        }
        private global::System.Decimal _Ratio;
        partial void OnRatioChanging(global::System.Decimal value);
        partial void OnRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WalletFromID
        {
            get
            {
                return _WalletFromID;
            }
            set
            {
                OnWalletFromIDChanging(value);
                ReportPropertyChanging("WalletFromID");
                _WalletFromID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletFromID");
                OnWalletFromIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WalletFromID;
        partial void OnWalletFromIDChanging(Nullable<global::System.Int32> value);
        partial void OnWalletFromIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WalletToID
        {
            get
            {
                return _WalletToID;
            }
            set
            {
                OnWalletToIDChanging(value);
                ReportPropertyChanging("WalletToID");
                _WalletToID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WalletToID");
                OnWalletToIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WalletToID;
        partial void OnWalletToIDChanging(Nullable<global::System.Int32> value);
        partial void OnWalletToIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Users_ChangerID", "User")]
        public User UserChanger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserChangerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Users_CreatorID", "User")]
        public User UserCreator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_WalletRatios_Users_CreatorID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletFromID", "Wallet")]
        public Wallet WalletFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletFromID", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WalletRatios_Wallets_WalletToID", "Wallet")]
        public Wallet WalletTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "Wallet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "Wallet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallet> WalletToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallet>("BuildingModel.FK_WalletRatios_Wallets_WalletToID", "Wallet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="WorkLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="changeDate">Initial value of the ChangeDate property.</param>
        /// <param name="creatorID">Initial value of the CreatorID property.</param>
        /// <param name="changerID">Initial value of the ChangerID property.</param>
        public static WorkLog CreateWorkLog(global::System.Int32 id, global::System.DateTime date, global::System.Decimal hours, global::System.DateTime createDate, global::System.DateTime changeDate, global::System.Int32 creatorID, global::System.Int32 changerID)
        {
            WorkLog workLog = new WorkLog();
            workLog.ID = id;
            workLog.Date = date;
            workLog.Hours = hours;
            workLog.CreateDate = createDate;
            workLog.ChangeDate = changeDate;
            workLog.CreatorID = creatorID;
            workLog.ChangerID = changerID;
            return workLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private global::System.DateTime _ChangeDate;
        partial void OnChangeDateChanging(global::System.DateTime value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.Int32 _CreatorID;
        partial void OnCreatorIDChanging(global::System.Int32 value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangerID
        {
            get
            {
                return _ChangerID;
            }
            set
            {
                OnChangerIDChanging(value);
                ReportPropertyChanging("ChangerID");
                _ChangerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangerID");
                OnChangerIDChanged();
            }
        }
        private global::System.Int32 _ChangerID;
        partial void OnChangerIDChanging(global::System.Int32 value);
        partial void OnChangerIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_WorkLogs_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_WorkLogs_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("BuildingModel.FK_WorkLogs_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("BuildingModel.FK_WorkLogs_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Projects", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_WorkLogs_Projects", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_WorkLogs_Projects", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("BuildingModel.FK_WorkLogs_Projects", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("BuildingModel.FK_WorkLogs_Projects", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Users_ChangerID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_ChangerID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_ChangerID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_ChangerID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_ChangerID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_WorkLogs_Users_CreatorID", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_CreatorID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_CreatorID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_CreatorID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BuildingModel.FK_WorkLogs_Users_CreatorID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BuildingModel", Name="WorkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static WorkType CreateWorkType(global::System.Int32 id, global::System.String name, global::System.Boolean deleted, global::System.Int32 orderNumber, global::System.Int32 companyID, global::System.Decimal price)
        {
            WorkType workType = new WorkType();
            workType.ID = id;
            workType.Name = name;
            workType.Deleted = deleted;
            workType.OrderNumber = orderNumber;
            workType.CompanyID = companyID;
            workType.Price = price;
            return workType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysName
        {
            get
            {
                return _SysName;
            }
            set
            {
                OnSysNameChanging(value);
                ReportPropertyChanging("SysName");
                _SysName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysName");
                OnSysNameChanged();
            }
        }
        private global::System.String _SysName;
        partial void OnSysNameChanging(global::System.String value);
        partial void OnSysNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BuildingModel", "FK_ProjectWorks_WorkTypes", "ProjectWorks")]
        public EntityCollection<ProjectWork> ProjectWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_WorkTypes", "ProjectWorks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectWork>("BuildingModel.FK_ProjectWorks_WorkTypes", "ProjectWorks", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
